{"version":3,"sources":["getWeb3.js","components/CreateEvent.js","util/conversion.js","util/EthErrorMsg.js","components/EventListItem.js","components/EventList.js","components/BrowseEvents.js","components/MyTickets/TicketView.js","components/MyTickets.js","components/MyEvents/OwnedEvent.js","components/MyEvents.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","CreateEvent","state","event_ID","event_title","sale_active","buyback_active","customer_limited","tickets_per_customer","ticket_types","price_table","deadline","button_disabled","event_ID_helperText","error_open","error_title","error_message","tickets_avail","ticket_prices","event_ID_hex","set_ticket_types","val","Math","min","setState","tickets_and_prices","Array","check_form","open_error","errorMessage","handle_close_error","update_deadline","update_event_ID","props","utils","padRight","asciiToHex","update_title","title","button_state","check_fields","submit","contract","methods","create_event","round","getTime","send","from","accounts","on","tx","add_pending_tx","num","receipt","confirm","transactionHash","message","this","TextField","id","color","label","helperText","variant","required","onChange","e","target","value","FormControlLabel","control","Switch","checked","margin","type","defaultValue","inputProps","max","step","DateFnsUtils","format","d","Button","disabled","onClick","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","i","prevState","key","toWei","length","event_list","includes","Component","bytesToString","bytes","replace","str","n","substr","String","fromCharCode","parseInt","getErrorMessage","error","JSON","parse","EventListItem","ExpansionPanel","ExpansionPanelSummary","expandIcon","Typography","className","event","Date","now","total_available_tickets","ExpansionPanelDetails","Grid","item","xs","style","textAlign","sum","available_tickets","BuyTicket","ticket_type","total","convert_to_eth","ticket_price","handleChange","name","check_choice","buyTickets","total_value","buy_tickets","eventId","reload_event","bind","r","fromWei","toString","FormControl","toISOString","RadioGroup","map","Radio","EventList","events","get","BrowseEvents","TicketView","customer","componentDidMount","load_tickets","get_tickets","call","tickets","return_tickets","failed","estimateGas","then","gasAmount","catch","list_tickets","can_return_tickets","List","dense","ListItem","MyTickets","participation","get_participation","has","OwnedEvent","handle_close_confirmation","confirmation_open","event_deleted","delete_event","confirmation_title","confirmation_message","handleActivateSale","activator","stop_sale","continue_sale","view_funds","funds","withdraw_funds","get_customer_list","get_customers","customer_list","Chip","avatar","Avatar","get_color","clickable","prices","AddTickets","addTickets","fill","add_tickets","ChangePrices","ticketType","newPrice","change_ticket_price","FormHelperText","Select","labelId","MenuItem","check_input","input","s","MyEvents","owned_events","owner","push","colors","theme","createMuiTheme","palette","primary","main","secondary","background","text","action","overrides","MuiExpansionPanelSummary","root","backgroundColor","MuiExpansionPanelDetails","MuiFormControlLabel","MuiOutlinedInput","borderColor","MuiPickersBasePicker","pickerView","MuiPickersCalendarHeader","dayLabel","MuiSvgIcon","MuiDialog","paper","PendingButton","styled","orange","ConfirmedButton","green","TabPanel","children","index","other","component","role","hidden","aria-labelledby","Box","p","tabProps","SimpleBackdrop","Backdrop","CircularProgress","App","activeTab","pending","confirmed","failed_metamask","accountChangeCheck","setInterval","eth","getAccounts","currentProvider","net","getId","networkId","deployedNetwork","EventContract","networks","instance","Contract","abi","address","options","handleRevert","load_event_list","load_events","EventCreated","err","res","returnValues","event_id","connect_metamask","get_events","Map","all","get_event_info","set","updated_event","updatedEvents","delete","changeTab","splice","indexOf","ThemeProvider","AppBar","position","short","substring","conf","Tabs","indicatorColor","centered","aria-label","Tab","login_bar","ButtonGroup","href","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58e2135e.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, TextField, FormControlLabel, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nexport default class CreateEvent extends Component {\r\n  state = {\r\n    event_ID: null, \r\n    event_title: null, \r\n    sale_active: false, \r\n    buyback_active: false, \r\n    customer_limited: false, \r\n    tickets_per_customer: 1, \r\n    ticket_types: 1, \r\n    price_table: [], \r\n    deadline: null, \r\n    button_disabled: true, \r\n    event_ID_helperText: \"\",\r\n    error_open: false,\r\n    error_title: null,\r\n    error_message: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.set_ticket_types(1);\r\n  }\r\n\r\n  tickets_avail = [];\r\n  ticket_prices = [];\r\n  event_ID_hex = \"\";\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <TextField \r\n          id=\"event_ID\" \r\n          color=\"secondary\"\r\n          label=\"Unique event ID\" \r\n          helperText={this.state.event_ID_helperText}\r\n          variant=\"outlined\" \r\n          required={true} \r\n          onChange={e => this.update_event_ID(e.target.value) } />\r\n\r\n        <TextField \r\n          id=\"event_title\" \r\n          color=\"secondary\"\r\n          label=\"Event title\" \r\n          variant=\"outlined\" \r\n          required={true}\r\n          onChange={e => this.update_title(e.target.value) } />\r\n\r\n        <div><FormControlLabel\r\n          control={<Switch onChange={e => this.setState({sale_active: e.target.checked})} />}\r\n          label=\"Sale active on deployment\" /></div>\r\n\r\n        <div><FormControlLabel\r\n          control={<Switch onChange={e => this.setState({buyback_active: e.target.checked})} />}\r\n          label=\"Buyback active on deployment\" /></div>\r\n\r\n        <div><FormControlLabel\r\n          control={<Switch onChange={e => this.setState({customer_limited: e.target.checked})} />}\r\n          label=\"Limit number of tickets per customer\" /></div>\r\n        \r\n        {this.tickets_per_customer()}\r\n\r\n        <div><TextField \r\n          id=\"ticket_types\" \r\n          color=\"secondary\"\r\n          label=\"# of ticket types\" \r\n          variant=\"outlined\" \r\n          margin=\"normal\"\r\n          required={true}\r\n          type=\"number\"\r\n          defaultValue={1}\r\n          inputProps={{ min: \"1\", max: \"15\", step: \"1\" }}\r\n          onChange={e => this.set_ticket_types(e.target.value)} /></div>\r\n\r\n        {this.state.price_table}\r\n\r\n        <div>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              id=\"deadline\"\r\n              color=\"secondary\"\r\n              variant=\"inline\"\r\n              format=\"yyyy-MM-dd\"\r\n              margin=\"normal\"\r\n              label=\"Choose a deadline date\"\r\n              value={this.state.deadline}\r\n              onChange={d => this.update_deadline(d)}/>\r\n\t      <KeyboardTimePicker\r\n              margin=\"normal\"\r\n              id=\"time-picker\"\r\n              color=\"secondary\"\r\n              label=\"Choose a deadline time\"\r\n              value={this.state.deadline}\r\n              onChange={d => this.update_deadline(d)}/>\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n\r\n        <div><Button\r\n          id=\"createButton\"\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          disabled={this.state.button_disabled}\r\n          onClick={() => { this.submit() }}\r\n        >Create Event</Button></div>\r\n        <Dialog\r\n          open={this.state.error_open}\r\n          onClose={this.handle_close_error}\r\n        >\r\n          <DialogTitle>{this.state.error_title}</DialogTitle>\r\n          <DialogContent>\r\n            {this.state.error_message}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handle_close_error} color=\"secondary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  tickets_per_customer() {\r\n    if (this.state.customer_limited) return (\r\n      <div><TextField \r\n        id=\"tickets_per_customer\" \r\n        color=\"secondary\"\r\n        label=\"Max. tickets / customer\" \r\n        variant=\"outlined\" \r\n        margin=\"normal\"\r\n        required={true}\r\n        type=\"number\"\r\n        defaultValue={1}\r\n        inputProps={{ min: \"1\", step: \"1\" }}\r\n        onChange={e => this.setState({tickets_per_customer: e.target.value})} /></div>\r\n    )\r\n  }\r\n\r\n  set_ticket_types = async (val) => {\r\n    val = Math.min(val,15);\r\n    await this.setState({ticket_types: val});\r\n    this.tickets_and_prices();\r\n    this.tickets_avail = new Array(val);\r\n    this.ticket_prices = new Array(val);\r\n    this.check_form();\r\n  }\r\n\r\n  open_error = async (errorMessage) => {\r\n    await this.setState(\r\n      {\r\n        error_title: \"Error when creating event\", \r\n        error_message: \"There was an error when trying to create event: \" + errorMessage,\r\n        error_open: true,\r\n      }\r\n    );\r\n  }\r\n\r\n  handle_close_error = async () => {\r\n    await this.setState({error_open: false});\r\n  }\r\n\r\n  tickets_and_prices() {\r\n    this.setState({price_table: []});\r\n    for (let i=0; i<this.state.ticket_types; i++) {\r\n      this.setState(prevState => ({ price_table: [prevState.price_table, (\r\n        <div key={i}><TextField \r\n          id={\"tickets_avail\" + i}\r\n          color=\"secondary\"\r\n          label=\"Nr. of tickets\"\r\n          variant=\"outlined\" \r\n          margin=\"normal\"\r\n          required={true}\r\n          type=\"number\"\r\n          inputProps={{ min: \"1\", step: \"1\" }}\r\n          onChange={e => { this.tickets_avail[i] = e.target.value; this.check_form() }}\r\n          helperText={\"Ticket type \" + (i+1)} />\r\n        <TextField \r\n          id={\"ticket_price\" + i}\r\n          color=\"secondary\"\r\n          label=\"Ticket price (ETH)\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required={true}\r\n          type=\"number\"\r\n          inputProps={{ min: \"0.000001\", step: \"0.000001\" }}\r\n          onChange={e => {\r\n            !!e.target.value ? this.ticket_prices[i] = this.props.web3.utils.toWei(e.target.value) : this.ticket_prices[i] = null; \r\n            this.check_form();\r\n          }}\r\n          /></div>\r\n      )]}))\r\n    }\r\n  }\r\n\r\n  update_deadline = async (val) => {\r\n    await this.setState({deadline: val});\r\n    this.check_form();\r\n  }\r\n\r\n  update_event_ID = async (val) => {\r\n    await this.setState({event_ID: val});\r\n    this.event_ID_hex = this.props.web3.utils.padRight(\r\n          this.props.web3.utils.asciiToHex(\r\n            this.state.event_ID), 64);\r\n    \r\n    this.check_form();\r\n  }\r\n\r\n  update_title = async (val) => {\r\n    await this.setState({title: val});\r\n    this.check_form();\r\n  }\r\n\r\n  check_form = async () => {\r\n    let button_state = this.check_fields();\r\n    await this.setState({button_disabled: button_state})\r\n  }\r\n\r\n  check_fields() {\r\n    if (typeof this.state.event_ID !== \"string\") return true;\r\n    if (typeof this.state.event_ID === \"string\" && this.state.event_ID.length < 1) return true;\r\n\r\n    if (this.props.event_list.includes(this.event_ID_hex)) {\r\n      this.setState({event_ID_helperText: \"Event ID is not available.\"});\r\n      return true;\r\n    } else this.setState({event_ID_helperText: \"Event ID is available.\"});\r\n      \r\n    if (typeof this.state.title !== \"string\") return true;\r\n    if (typeof this.state.title === \"string\" && this.state.title.length < 1) return true;\r\n    if (this.state.deadline == null) return true;\r\n\r\n    for (let i=0; i<this.state.ticket_types; i++) {\r\n      if (!this.tickets_avail[i] || !this.ticket_prices[i]) return true;\r\n      if (this.tickets_avail[i] < 1 || this.ticket_prices[i] < 1) return true; //avoid zero or negative ticket availability or prices\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  submit = async () => {\r\n    try {\r\n      await this.props.contract.methods.create_event(\r\n        this.props.web3.utils.asciiToHex(this.state.event_ID),\r\n        this.props.web3.utils.asciiToHex(this.state.title),\r\n        this.tickets_avail,\r\n        this.ticket_prices,\r\n        this.state.customer_limited,\r\n        this.state.tickets_per_customer,\r\n        this.state.sale_active,\r\n        this.state.buyback_active,\r\n        Math.round(this.state.deadline.getTime() / 1000)\r\n        ).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Dev error: \");\r\n      console.log(error);\r\n      await this.open_error(error.message);\r\n    }\r\n  }\r\n}\r\n","export function bytesToString(bytes){\r\n  bytes = bytes.replace('0x','');\r\n  let str = '';\r\n  for (var n = 0; n < bytes.length; n += 2) {\r\n    if(bytes.substr(n,2) == \"00\") break;\r\n    str += String.fromCharCode(parseInt(bytes.substr(n, 2), 16));\r\n  }\r\n  return str;\r\n}\r\n","export function getErrorMessage(error){\r\n  try {\r\n    let j = JSON.parse(error.message.substr(16, error.message.length-15));\r\n    return j.message;\r\n  } catch (e) {\r\n    return \"Unable to read error message.\";\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {TextField, Radio, RadioGroup, FormControl, FormControlLabel, Button, Grid } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { bytesToString } from '../util/conversion.js';\r\nimport { getErrorMessage } from '../util/EthErrorMsg.js';\r\nimport './ExpansionPanel.css';\r\n\r\nexport default class EventListItem extends Component {\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} >\r\n          <Typography className=\"heading\" \r\n            color={(this.props.event.sale_active && Date.now() < this.props.event.deadline*1000) ? \"primary\" : \"error\"}>\r\n            {bytesToString(this.props.event.title)}\r\n          </Typography>\r\n          <Typography className=\"secondaryHeading\">\r\n            {this.total_available_tickets()} available tickets\r\n          </Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails className=\"expansionPanelDetails\">\r\n          <Grid item xs={true} style={{textAlign: \"center\"}}>\r\n          <BuyTicket \r\n            {...this.props}\r\n          />\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n\r\n  total_available_tickets() {\r\n    let sum = 0;\r\n    for (let i=0; i < this.props.event.available_tickets.length; i++) {\r\n      sum += parseInt(this.props.event.available_tickets[i]);\r\n    }\r\n    return sum;\r\n  }\r\n}\r\n\r\nexport class BuyTicket extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.buyTickets = this.buyTickets.bind(this);\r\n  }\r\n\r\n  state = {\r\n    ticket_type: 0, \r\n    num: 1, \r\n    button_state: this.props.event.available_tickets[0] > 0, \r\n    total: this.convert_to_eth(this.props.event.ticket_price[0])};\r\n\r\n  handleChange = async (event) => {\r\n    await this.setState({[event.target.name]: parseInt(event.target.value)});\r\n    await this.setState({total: this.convert_to_eth(this.props.event.ticket_price[this.state.ticket_type]*this.state.num)});\r\n    this.setState({button_state: this.check_choice() && this.state.total !== \"invalid\"})\r\n  }\r\n\r\n  check_choice() {\r\n    return (!!this.state.num && this.props.event.available_tickets[this.state.ticket_type] >= this.state.num);\r\n  }\r\n\r\n  convert_to_eth(val) {\r\n    let r;\r\n    try{\r\n      r = this.props.web3.utils.fromWei(val.toString()) + \" ETH\";\r\n    } catch(e) {\r\n      r = \"invalid\";\r\n    }\r\n    return r;\r\n  }\r\n\r\n  buyTickets = async () => {\r\n    try {\r\n      let total_value = this.props.event.ticket_price[this.state.ticket_type]*this.state.num;\r\n      await this.props.contract.methods.buy_tickets(this.props.eventId, this.state.ticket_type, this.state.num)\r\n        .send({from: this.props.accounts[0], value: total_value})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      this.props.reload_event(this.props.eventId); //call to App.js to reload affected event\r\n\r\n    } catch (error){\r\n      console.log(getErrorMessage(error));\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return(\r\n      <>\r\n      <FormControl>\r\n        <TextField\r\n          label=\"Deadline\"\r\n          margin=\"normal\"\r\n          type=\"datetime-local\"\r\n          disabled={true}\r\n          error={Date.now() >= this.props.event.deadline*1000}\r\n          value={new Date(this.props.event.deadline*1000).toISOString().substr(0,16)}/>\r\n        <RadioGroup \r\n          value={this.state.ticket_type}\r\n          name=\"ticket_type\"\r\n          onChange={this.handleChange}\r\n        >\r\n        {this.props.event.available_tickets.map((e, i) => \r\n\r\n          <FormControlLabel\r\n            key={i}\r\n            value={i}\r\n            control={<Radio />}\r\n            label={\"Type \"+(i+1)+\" - Price: \"+this.props.web3.utils.fromWei(this.props.event.ticket_price[i])+\r\n                    \" ETH | Available: \"+this.props.event.available_tickets[i]}\r\n          />\r\n\r\n        )}\r\n        <br/><TextField\r\n          type=\"number\"\r\n          name=\"num\"\r\n          label=\"Number of tickets\"\r\n          required={true}\r\n          variant=\"outlined\"\r\n          disabled={!this.props.event.sale_active || Date.now() >= this.props.event.deadline*1000}\r\n          helperText={(!this.props.event.sale_active || Date.now() >= this.props.event.deadline*1000) ? \"Sale is closed for this event.\" : \"\"}\r\n          inputProps={{min: \"1\", max:this.props.event.available_tickets[this.state.ticket_type], step: \"1\"}}\r\n          defaultValue={1}\r\n          onChange={this.handleChange}\r\n        />\r\n        </RadioGroup>\r\n        Total: {this.state.total}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disabled={!this.state.button_state || !this.props.event.sale_active || Date.now() >= this.props.event.deadline*1000}\r\n          onClick={this.buyTickets}\r\n        > Buy tickets\r\n        </Button>\r\n      </FormControl>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport EventListItem from './EventListItem.js'\r\nimport './ExpansionPanel.css';\r\n\r\nexport default class EventList extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        {this.props.event_list.map(e =>\r\n          <EventListItem \r\n            key={e}\r\n            eventId={e}\r\n            event={this.props.events.get(e)}\r\n            {...this.props}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport EventList from './EventList.js';\r\n\r\nexport default class BrowseEvents extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <EventList {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {TextField, ExpansionPanel, ExpansionPanelSummary, Button, \r\nExpansionPanelDetails, FormControl, List, ListItem, Grid } from '@material-ui/core';\r\n\r\nimport { bytesToString } from '../../util/conversion.js';\r\n\r\nexport default class TicketView extends Component {\r\n  state = {customer: null}\r\n\r\n  componentDidMount = async () => {\r\n    // get list of tickets\r\n    this.load_tickets();\r\n  }\r\n\r\n  load_tickets = async () => {\r\n    this.setState({tickets: \r\n      await this.props.contract.methods.get_tickets(this.props.eventId, this.props.accounts[0]).call()});\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          {!!(this.props.event)?bytesToString(this.props.event.title):\"loading..\"}\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Grid item xs={true} style={{textAlign: \"center\"}}>\r\n          <FormControl>\r\n            \r\n            {!!(this.state.tickets) ? this.list_tickets() : \"loading..\"}\r\n            <TextField\r\n              label=\"Deadline\"\r\n              margin=\"normal\"\r\n              type=\"datetime-local\"\r\n              disabled={true}\r\n              error={Date.now() >= this.props.event.deadline*1000}\r\n              value={new Date(this.props.event.deadline*1000).toISOString().substr(0,16)}/>\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              disabled={this.can_return_tickets()}\r\n              onClick={() => { this.return_tickets() }}\r\n              >{!this.can_return_tickets() ? \"Return All Tickets\" : \"Ticket return is disabled\"}</Button>\r\n          </FormControl>\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n\r\n  can_return_tickets() {\r\n    return !!(this.state.tickets) ? \r\n      (!this.props.event.buyback_active \r\n      || !this.props.event.sale_active \r\n      || (this.state.tickets.length < 1)\r\n      || (Date.now() > this.props.event.deadline*1000)) :\r\n      true;\r\n  }\r\n\r\n  return_tickets = async () => {\r\n    let failed = true;\r\n    await this.props.contract.methods.return_tickets(this.props.eventId).estimateGas({from: this.props.accounts[0]})\r\n    .then(function(gasAmount){\r\n      failed = false;\r\n    })\r\n    .catch(function(error){\r\n      console.log(error);\r\n    });\r\n\r\n    if (!failed) {\r\n      await this.props.contract.methods.return_tickets(this.props.eventId).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      this.load_tickets();\r\n      this.props.reload_event(this.props.eventId);\r\n    }\r\n\r\n  }\r\n\r\n  list_tickets() {\r\n    if (this.state.tickets.length > 0) {\r\n      return(\r\n        <List dense={true}>\r\n          {this.state.tickets.map((e, i) => \r\n            {if(e > 0){\r\n              return <ListItem key={i}>Tickets of type {i+1}: {e}</ListItem>\r\n            }}\r\n          )}\r\n        </List>\r\n      );\r\n    } else {\r\n      return(\r\n        <div>No tickets found.</div>\r\n      );\r\n    }\r\n    \r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport TicketView from './MyTickets/TicketView.js';\r\n\r\nimport { getErrorMessage } from '../util/EthErrorMsg.js';\r\n\r\nexport default class MyTickets extends Component {\r\n\r\n  state = {participation: null}\r\n\r\n  componentDidMount = async () => {\r\n    // get events of which user owns tickets to\r\n    try {\r\n      let participation = await this.props.contract.methods.get_participation().call({from: this.props.accounts[0]})\r\n      this.setState({participation: participation});\r\n    } catch (error) {\r\n      console.log(getErrorMessage(error));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!!(this.state.participation) ? this.state.participation.map((e, i) =>\r\n          {if (this.props.events.has(e)) {\r\n            return(<TicketView\r\n              key={i}\r\n              accounts={this.props.accounts} \r\n              contract={this.props.contract}\r\n              eventId={e}\r\n              reload_event={this.props.reload_event}\r\n              add_pending_tx={this.props.add_pending_tx}\r\n              confirm={this.props.confirm}\r\n              event={this.props.events.get(e)} />)\r\n          } else return (\"No tickets found.\")} \r\n\r\n        ):\"No tickets found...\"}\r\n          \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TextField, ExpansionPanel, ExpansionPanelSummary, Button, Select, FormHelperText, \r\nExpansionPanelDetails, Chip, Avatar, FormControl, MenuItem, List, ListItem, \r\nDialog, DialogTitle, DialogContent, DialogActions, Grid} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport { bytesToString } from '../../util/conversion.js';\r\nimport { getErrorMessage } from '../../util/EthErrorMsg.js';\r\nimport '../ExpansionPanel.css';\r\n\r\nexport default class OwnedEvent extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer_list: [], \r\n      view_funds: false, \r\n      funds: 0, \r\n      confirmation_open: false,\r\n      confirmation_title: null, \r\n      confirmation_message: null,\r\n      event_deleted: false}\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.event) {\r\n      return <div>Loading event data..</div>;\r\n    }\r\n\r\n    return (\r\n      <div><ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          {!!(this.props.event)?bytesToString(this.props.event.title):\"loading..\"}\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n        <Grid item xs={true} style={{textAlign: \"center\"}}>\r\n          <FormControl>\r\n            <Chip\r\n              avatar={<Avatar>S</Avatar>}\r\n              label=\"Sale Status\"\r\n              color={this.get_color(this.props.event.sale_active)}\r\n              clickable\r\n              onClick={() => this.handleActivateSale(this.props.event.sale_active)}\r\n              variant=\"outlined\"/>\r\n            <Chip\r\n              avatar={<Avatar>B</Avatar>}\r\n              label=\"Buyback Status\"\r\n              color={this.get_color(this.props.event.buyback_active)}\r\n              variant=\"outlined\"/>\r\n            <TextField\r\n              label=\"Deadline\"\r\n              margin=\"normal\"\r\n              type=\"datetime-local\"\r\n              disabled={true}\r\n              error={Date.now() >= this.props.event.deadline*1000}\r\n              value={new Date(this.props.event.deadline*1000).toISOString().substr(0,16)}\r\n            />\r\n\r\n            <br/>\r\n\r\n            <List dense={true}>\r\n              {this.props.event.available_tickets.map((e,i) => \r\n                <ListItem key={i}>\r\n                  Ticket type {i+1} - Available tickets: \r\n                  {this.props.event.available_tickets[i]} | Ticket price: \r\n                  {this.props.web3.utils.fromWei(this.props.event.ticket_price[i])} ETH\r\n                </ListItem>\r\n              )}\r\n            </List>\r\n            <br/>\r\n\r\n            <Chip\r\n              label={\"View funds: \" + (this.state.view_funds? (this.props.web3.utils.fromWei(this.state.funds) + \" ETH\") : \"...\")}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              clickable\r\n              onClick={() => this.view_funds()} /> <br/>\r\n\r\n            <div><Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disabled={(Date.now() < this.props.event.deadline*1000) || this.state.funds <= 0}\r\n              onClick={() => { this.withdraw_funds() }}\r\n              >Withdraw funds</Button></div><br/>\r\n\r\n            <AddTickets\r\n              {...this.props}\r\n              tickets={this.props.event.available_tickets}/>\r\n\r\n            <ChangePrices\r\n              {...this.props}\r\n              prices={this.props.event.ticket_price}/>\r\n            <br/>\r\n\r\n            <div><Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => { this.get_customer_list() }}\r\n              >Load customer list</Button></div>\r\n\r\n            <List dense={true}>\r\n              {this.state.customer_list.map((e, i) => \r\n                <ListItem key={i}>\r\n                  {e}\r\n                </ListItem>\r\n              )}\r\n            </List>\r\n\r\n            <div><Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disabled={(Date.now() < (this.props.event.deadline+604800)*1000) || this.state.funds > 0}\r\n              onClick={() => this.setState({\r\n                confirmation_title: \"Delete Event\", \r\n                confirmation_open: true,\r\n                confirmation_message: \"Deletion of event is irreversible - Confirm?\"})}\r\n              >Delete Event</Button></div>\r\n\r\n          </FormControl>\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n      <Dialog\r\n        open={this.state.confirmation_open}\r\n        onClose={this.handle_close_confirmation}\r\n      >\r\n        <DialogTitle>{this.state.confirmation_title}</DialogTitle>\r\n        <DialogContent>\r\n          {this.state.confirmation_message}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"secondary\"\r\n            disabled={(Date.now() < (this.props.event.deadline/*+604800*/)*1000) || this.state.funds > 0 || this.state.event_deleted}\r\n            onClick={() => this.delete_event()}\r\n          >Delete Event</Button>\r\n          <Button onClick={this.handle_close_confirmation}>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog></div>\r\n    );\r\n  }\r\n\r\n  handle_close_confirmation = async () => {\r\n    await this.setState({confirmation_open: false});\r\n    if(this.state.event_deleted){\r\n      await this.props.delete_event(this.props.eventId);\r\n    }\r\n  }\r\n\r\n  delete_event = async () => {\r\n    try {\r\n      await this.props.contract.methods.delete_event(this.props.eventId).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      await this.setState({\r\n        event_deleted: true,\r\n        confirmation_title: \"Event deleted\",\r\n        confirmation_message: \"Event has been permanently deleted.\"});\r\n    } catch (error) {\r\n      await this.setState({\r\n        confirmation_title: \"Event deletion failed\",\r\n        confirmation_message: \"Event was not deleted - transaction failed. \\n\" + getErrorMessage(error)});\r\n    }\r\n  }\r\n\r\n  get_color(activator) {\r\n    if (activator) return \"secondary\" \r\n    else return \"primary\";\r\n  }\r\n\r\n  handleActivateSale = async (activator) => {\r\n    try {\r\n      if (activator) {\r\n        await this.props.contract.methods.stop_sale(this.props.eventId).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      } else {\r\n        await this.props.contract.methods.continue_sale(this.props.eventId).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      }\r\n      this.props.reload_event(this.props.eventId); //call to App.js to reload affected event\r\n    \r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n\r\n  view_funds = async () => {\r\n    if (!this.state.view_funds) {\r\n      try{\r\n        this.setState({funds: await this.props.contract.methods.view_funds(\r\n          this.props.eventId\r\n          ).call({from: this.props.accounts[0]})});\r\n        this.setState({view_funds: true})\r\n      } catch (error) {\r\n        console.log(\"Dev error: \" + error.message);\r\n      }\r\n    } else {\r\n      this.setState({view_funds: false})\r\n    }\r\n  }\r\n\r\n  withdraw_funds = async () => {\r\n    try{\r\n      // attempt to withdraw funds\r\n      await this.props.contract.methods.withdraw_funds(this.props.eventId)\r\n        .send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n\r\n      //update current funds display\r\n      this.setState({funds: await this.props.contract.methods.view_funds(\r\n        this.props.eventId\r\n        ).call({from: this.props.accounts[0]})});\r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n\r\n  get_customer_list = async () => {\r\n    try {\r\n      this.setState({customer_list: await this.props.contract.methods.get_customers(\r\n        this.props.eventId\r\n        ).call({from: this.props.accounts[0]})});\r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n}\r\n\r\nexport class AddTickets extends Component {\r\n  addTickets = new Array(this.props.tickets.length).fill(\"0\");\r\n\r\n  render() {\r\n    return(\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          Add tickets\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <FormControl>\r\n            {this.props.tickets.map((e, i) => \r\n              <TextField \r\n                key={i}\r\n                id={\"tickets_to_add\" + i}\r\n                label=\"Tickets to add\"\r\n                variant=\"outlined\" \r\n                margin=\"normal\"\r\n                required={false}\r\n                type=\"number\"\r\n                defaultValue=\"0\"\r\n                onChange={e => this.addTickets[i] = e.target.value}\r\n                inputProps={{ min: \"0\", step: \"1\" }}\r\n                helperText={\"Ticket type \" + (i+1)} />\r\n            )}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => { this.submit() }}\r\n              >Add</Button>\r\n          </FormControl>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n\r\n  submit = async () => {\r\n    try {\r\n      await this.props.contract.methods.add_tickets(\r\n        this.props.eventId,\r\n        this.addTickets\r\n        ).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      this.props.reload_event(this.props.eventId); //call to App.js to reload affected event\r\n\r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n}\r\n\r\nexport class ChangePrices extends Component {\r\n  state = {ticketType: 0, newPrice: this.props.prices[0], button_state: false}\r\n\r\n  render() {\r\n    return(\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          Change prices\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <FormControl>\r\n            <FormHelperText>Ticket type to change</FormHelperText>\r\n            <Select\r\n              labelId=\"Ticket type to change\"\r\n              value={this.state.ticketType}\r\n              onChange={e => this.setState({ticketType: e.target.value})}\r\n            >\r\n              {this.props.prices.map((e, i) => \r\n                <MenuItem key={i} value={i}>{i+1}</MenuItem>\r\n              )}\r\n            </Select>\r\n            \r\n            <TextField \r\n                id={\"new_price\"}\r\n                label=\"New price (ETH)\"\r\n                variant=\"outlined\" \r\n                margin=\"normal\"\r\n                required={true}\r\n                type=\"number\"\r\n                defaultValue={this.props.prices[this.state.ticketType]}\r\n                onChange={e => {\r\n                  !!e.target.value ? this.setState({newPrice: this.props.web3.utils.toWei(e.target.value)}) : \r\n                    this.setState({newPrice: null});\r\n                  this.check_input(e.target.value);\r\n                }}\r\n                inputProps={{ min: \"0.000001\", step: \"0.000001\" }}/>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => { this.submit() }}\r\n              disabled={this.state.button_state}\r\n              >Change price</Button>\r\n          </FormControl>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n\r\n  check_input(input) {\r\n    let s = (!input || input < 0.000001);\r\n    this.setState({button_state: s });\r\n  }\r\n\r\n  submit = async () => {\r\n    try {\r\n      await this.props.contract.methods.change_ticket_price(\r\n        this.props.eventId,\r\n        this.state.ticketType,\r\n        this.state.newPrice\r\n        ).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      this.props.reload_event(this.props.eventId); //call to App.js to reload affected event\r\n\r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport OwnedEvent from './MyEvents/OwnedEvent.js';\r\n\r\nexport default class MyEvents extends Component {\r\n  owned_events = [];\r\n  constructor() {\r\n    super();\r\n    this.state = {owned_events: []}\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    // extract list of owned events from all events\r\n    this.props.event_list.map(async (eventId) => {\r\n      let event = this.props.events.get(eventId);\r\n      if (event.owner === this.props.accounts[0]) {\r\n        this.owned_events.push(eventId);\r\n      }\r\n    });\r\n\r\n    this.setState({owned_events: this.owned_events});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.owned_events.map((e, i) =>\r\n          <OwnedEvent\r\n            key={i}\r\n            accounts={this.props.accounts} \r\n            contract={this.props.contract}\r\n            eventId={e} \r\n            event={this.props.events.get(e)}\r\n            reload_event={this.props.reload_event}\r\n            delete_event={this.props.delete_event}\r\n            add_pending_tx={this.props.add_pending_tx}\r\n            confirm={this.props.confirm}\r\n            web3={this.props.web3}/>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport EventContract from \"./contracts/EventContract.json\";\r\nimport getWeb3 from \"./getWeb3\";\r\nimport Web3 from 'web3';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport styled from 'styled-components';\r\nimport { green, orange } from '@material-ui/core/colors';\r\nimport { Button, Typography, AppBar, Tabs, Tab, Backdrop, CircularProgress, FormControl, \r\n  Grid, ButtonGroup, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport \"./App.css\";\r\nimport CreateEvent from \"./components/CreateEvent\";\r\nimport BrowseEvents from \"./components/BrowseEvents\";\r\nimport MyTickets from \"./components/MyTickets\";\r\nimport MyEvents from \"./components/MyEvents\";\r\n\r\nconst colors = {white: \"#ffffff\", black: \"#000000\", teal: \"#2fc4b5\", grey: \"#7a7a7a\", light_grey: \"#b5b5b5\", \r\n  dark_grey: \"#363636\", orange: \"#e85623\"};\r\n\r\nconst theme = createMuiTheme({\r\n  \r\n  palette: {\r\n    primary: {\r\n      main: colors.white,\r\n    },\r\n    secondary: {\r\n      main: colors.teal,\r\n    },\r\n    error: {\r\n      main: colors.orange,\r\n    },\r\n    background: {\r\n      main: colors.dark_grey,\r\n    },\r\n    text: {\r\n      primary: colors.white,\r\n      secondary: colors.light_grey,\r\n      disabled: colors.light_grey,\r\n    },\r\n    action: {\r\n      disabled: colors.light_grey,\r\n    }\r\n  },\r\n\r\n  overrides: {\r\n    MuiExpansionPanelSummary: {\r\n      root: {\r\n        backgroundColor: colors.dark_grey,\r\n      },\r\n    },\r\n\r\n    MuiExpansionPanelDetails: {\r\n      root: {\r\n        backgroundColor: colors.dark_grey,\r\n      },\r\n    },\r\n\r\n    MuiFormControlLabel: {\r\n      label: {\r\n        color: colors.light_grey,\r\n      },\r\n    },\r\n\r\n    MuiOutlinedInput: {\r\n      root: {\r\n        '& $notchedOutline': {\r\n          borderColor: colors.grey,\r\n        },\r\n      }\r\n    },\r\n\r\n    MuiPickersBasePicker:{\r\n      pickerView:{\r\n        backgroundColor:colors.dark_grey,\r\n      }\r\n    },\r\n\r\n    MuiPickersCalendarHeader: {\r\n      dayLabel: {\r\n        color: colors.light_grey,\r\n      },\r\n    },\r\n\r\n    MuiSvgIcon: {\r\n      root: {\r\n        color: colors.light_grey,\r\n      }\r\n    },\r\n\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: colors.dark_grey,\r\n        color: colors.white,\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst PendingButton = styled(Button)`\r\n  && {\r\n    text-transform: none;\r\n    background-color: ${orange[200]};\r\n  }\r\n`;\r\n\r\nconst ConfirmedButton = styled(Button)`\r\n  text-transform: none;\r\n  background-color: ${green[200]};\r\n`;\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`app-tabpanel-${index}`}\r\n      aria-labelledby={`app-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction tabProps(index) {\r\n  return {\r\n    id: `app-tab-${index}`,\r\n    'aria-controls': `app-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction SimpleBackdrop() {\r\n  return (\r\n    <div>\r\n      <Backdrop  open={true}>\r\n        <FormControl>\r\n          <CircularProgress color=\"secondary\" />\r\n        </FormControl>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nclass App extends Component {\r\n  state = { \r\n    web3: null, \r\n    accounts: null, \r\n    contract: null, \r\n    activeTab: 0, \r\n    pending: [], \r\n    confirmed: [],\r\n    failed_metamask: false};\r\n\r\n  accountChangeCheck = setInterval( async () => {\r\n    if (this.state.web3 && this.state.accounts && this.state.web3.eth.accounts[0] !== this.state.accounts[0]) {\r\n      this.setState({accounts: await this.state.web3.eth.getAccounts()});\r\n    }\r\n  }, 1000);\r\n\r\n  componentDidMount = async () => {\r\n    /*window.addEventListener('load', async () => {\r\n      if (window.ethereum) {\r\n        try {\r\n          // Get network provider and web3 instance.\r\n          const web3 = window.ethereum;\r\n          this.setState({web3: web3});\r\n        } catch (error) {\r\n          console.log(error.message);\r\n        }\r\n      }\r\n    });*/\r\n\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      let web3 = null;\r\n      if (window.ethereum) {\r\n        web3 = new Web3(window.ethereum);\r\n      } else if (window.web3) {\r\n        web3 = new Web3(window.web3.currentProvider);\r\n      } else {\r\n        web3 = await getWeb3();\r\n      }\r\n\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = EventContract.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        EventContract.abi,\r\n        deployedNetwork.address\r\n      );\r\n\r\n      instance.options.handleRevert = true;\r\n\r\n      // Set web3, accounts, and contract to the state\r\n      this.setState({ web3, contract: instance});\r\n\r\n      // load list of event IDs\r\n      await this.load_event_list();\r\n\r\n      // cache all events\r\n      await this.load_events();\r\n\r\n      // Listen for the EventCreated event to be emitted from the contract\r\n      instance.events.EventCreated(async (err, res) => {\r\n        if(!err){\r\n          await this.reload_event(res.returnValues.event_id);\r\n          await this.load_event_list();\r\n        }\r\n      });\r\n\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  connect_metamask = async () => {\r\n    try {\r\n      const web3 = new Web3(window.ethereum);\r\n      const accounts = await window.ethereum.enable();\r\n\r\n      this.setState({web3: web3, accounts: accounts});\r\n\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      this.setState({failed_metamask: true});\r\n    }\r\n  }\r\n\r\n  load_event_list = async () => {\r\n    let event_list = await this.state.contract.methods.get_events().call();\r\n    this.setState({event_list: event_list});\r\n  }\r\n\r\n  load_events = async () => {\r\n    let events = new Map();\r\n    await Promise.all(this.state.event_list.map(async (event) => {\r\n      events.set(event, await this.state.contract.methods.get_event_info(event).call());\r\n    }));\r\n    this.setState({ events: events });\r\n  }\r\n\r\n  reload_event = async (event_id) => {\r\n    let updated_event = await this.state.contract.methods.get_event_info(event_id).call();\r\n    this.setState((prevState) => {\r\n      let updatedEvents = new Map(prevState.events);\r\n      return { events: updatedEvents.set(event_id, updated_event)};\r\n    });\r\n  }\r\n\r\n  delete_event = async (event_id) => {\r\n    await this.load_event_list();\r\n    this.setState((prevState) => {\r\n      let updatedEvents = new Map(prevState.events);\r\n      updatedEvents.delete(event_id);\r\n      return { events: updatedEvents};\r\n    });\r\n  }\r\n\r\n  changeTab = (event, value) => {\r\n    this.setState({ activeTab: value });\r\n  }\r\n\r\n  confirm = async (tx) => {\r\n    let pending = this.state.pending;\r\n    pending.splice(pending.indexOf(tx), 1);\r\n    this.setState({ pending: pending });\r\n    this.setState({ confirmed: [...this.state.confirmed, tx] });\r\n  }\r\n\r\n  add_pending_tx = async (id) => {\r\n    this.setState({ pending: [...this.state.pending, (id)] });\r\n  }\r\n\r\n  handle_close_error = async () => {\r\n    await this.setState({failed_metamask: false});\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.state.web3 || !this.state.events) {\r\n      return (\r\n        <ThemeProvider theme={theme}>\r\n          <SimpleBackdrop/>;\r\n        </ThemeProvider> );\r\n    }\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <Dialog open={this.state.failed_metamask} onClose={this.handle_close_error}>\r\n          <DialogTitle>Failed to connect</DialogTitle>\r\n          <DialogContent>Connection to MetaMask account failed. Is MetaMask installed?</DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handle_close_error} color=\"secondary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <AppBar position=\"static\">\r\n          {this.state.pending.map((tx) => {\r\n            let short = tx.substring(0,15) + '...';\r\n            return (\r\n              <PendingButton \r\n                variant=\"contained\"\r\n              >Transaction with id {short} is pending</PendingButton>\r\n            );\r\n          })}\r\n          {this.state.confirmed.map((tx) => {\r\n            let short = tx.substring(0,15) + '...';\r\n            return (\r\n              <ConfirmedButton \r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  let conf = this.state.confirmed;\r\n                  conf.splice(conf.indexOf(tx), 1);\r\n                  this.setState({ confirmed: conf });\r\n                }}\r\n              >Transaction with id {short} has been confirmed! Click to dismiss.</ConfirmedButton>\r\n            );\r\n          })}\r\n          <Tabs\r\n            value={this.state.activeTab}\r\n            className=\"Tabs\"\r\n            indicatorColor=\"secondary\"\r\n            centered={true}\r\n            onChange={this.changeTab}\r\n            aria-label=\"simple tabs example\"\r\n          >\r\n            <Tab label=\"Browse\" {...tabProps(0)} />\r\n            <Tab label=\"My tickets\" disabled={!this.state.accounts} {...tabProps(1)} />\r\n            <Tab label=\"My events\" disabled={!this.state.accounts} {...tabProps(2)} />\r\n            <Tab label=\"Create\" disabled={!this.state.accounts} {...tabProps(3)} />\r\n          </Tabs>\r\n        </AppBar>\r\n        {this.login_bar()}\r\n        <TabPanel value={this.state.activeTab} index={0}>\r\n          <BrowseEvents \r\n            contract={this.state.contract} \r\n            accounts={this.state.accounts}\r\n            event_list={this.state.event_list}\r\n            events={this.state.events}\r\n            reload_event={this.reload_event}\r\n            confirm={this.confirm}\r\n            add_pending_tx={this.add_pending_tx}\r\n            web3={this.state.web3}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={this.state.activeTab} index={1}>\r\n            <MyTickets \r\n              accounts={this.state.accounts} \r\n              contract={this.state.contract}\r\n              reload_event={this.reload_event}\r\n              confirm={this.confirm}\r\n              add_pending_tx={this.add_pending_tx}\r\n              events={this.state.events}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={this.state.activeTab} index={2}>\r\n            <MyEvents\r\n              accounts={this.state.accounts} \r\n              contract={this.state.contract} \r\n              event_list={this.state.event_list}\r\n              events={this.state.events}\r\n              reload_event={this.reload_event}\r\n              delete_event={this.delete_event}\r\n              confirm={this.confirm}\r\n              add_pending_tx={this.add_pending_tx}\r\n              web3={this.state.web3}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={this.state.activeTab} index={3}>\r\n            <CreateEvent \r\n              event_list={this.state.event_list}\r\n              web3={this.state.web3} \r\n              accounts={this.state.accounts} \r\n              contract={this.state.contract}\r\n              confirm={this.confirm}\r\n              add_pending_tx={this.add_pending_tx}\r\n              colors={this.colors}/>\r\n        </TabPanel>\r\n      </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n\r\n  login_bar() {\r\n    if (!this.state.accounts) return (\r\n      <Grid item xs={true} style={{textAlign: \"center\"}}>\r\n        <ButtonGroup color=\"secondary\">\r\n          <Button \r\n            variant=\"outlined\"\r\n            onClick={() => this.connect_metamask()}\r\n            >Connect with MetaMask</Button>\r\n          <Button \r\n            variant=\"outlined\"\r\n            href=\"https://metamask.io\"\r\n            target=\"_blank\"\r\n            >Get MetaMask</Button>\r\n          </ButtonGroup>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}