{"version":3,"sources":["getWeb3.js","components/CreateEvent.js","util/conversion.js","util/EthErrorMsg.js","components/EventListItem.js","components/EventList.js","components/BrowseEvents.js","components/MyTickets/TicketView.js","components/MyTickets.js","components/MyEvents/OwnedEvent.js","components/MyEvents.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","CreateEvent","state","event_ID","event_title","sale_active","buyback_active","customer_limited","tickets_per_customer","ticket_types","price_table","deadline","button_disabled","event_ID_helperText","confirmation_open","confirmation_title","confirmation_message","event_created","tickets_avail","ticket_prices","event_ID_hex","set_ticket_types","val","Math","min","setState","tickets_and_prices","Array","check_form","open_confirmation","errorMessage","handle_close_confirmation","props","new_event_update","utils","padRight","asciiToHex","update_deadline","update_event_ID","update_title","title","button_state","check_fields","submit","contract","methods","create_event","round","getTime","send","from","accounts","message","this","TextField","id","label","helperText","variant","required","onChange","e","target","value","FormControlLabel","control","Switch","checked","margin","type","defaultValue","inputProps","max","step","DateFnsUtils","format","d","Button","disabled","onClick","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","i","prevState","key","toWei","length","event_list","includes","Component","bytesToString","bytes","replace","str","n","substr","String","fromCharCode","parseInt","getErrorMessage","error","JSON","parse","EventListItem","ExpansionPanel","ExpansionPanelSummary","expandIcon","Typography","className","color","event","Date","now","total_available_tickets","ExpansionPanelDetails","sum","available_tickets","BuyTicket","ticket_type","num","total","convert_to_eth","ticket_price","handleChange","name","check_choice","buyTickets","total_value","buy_tickets","eventId","reload_event","bind","r","fromWei","toString","FormControl","toISOString","RadioGroup","map","Radio","EventList","events","get","BrowseEvents","TicketView","customer","componentDidMount","load_tickets","get_tickets","call","tickets","return_tickets","failed","estimateGas","then","gasAmount","catch","list_tickets","can_return_tickets","List","dense","ListItem","MyTickets","participation","get_participation","has","OwnedEvent","event_deleted","delete_event","handleActivateSale","activator","stop_sale","continue_sale","view_funds","funds","withdraw_funds","get_customer_list","get_customers","customer_list","Chip","avatar","Avatar","get_color","clickable","prices","AddTickets","addTickets","fill","add_tickets","ChangePrices","ticketType","newPrice","change_ticket_price","FormHelperText","Select","labelId","MenuItem","check_input","input","s","MyEvents","owned_events","owner","push","TabPanel","children","index","other","component","role","hidden","aria-labelledby","Box","p","tabProps","SimpleBackdrop","Backdrop","CircularProgress","App","activeTab","eth","getAccounts","net","getId","networkId","deployedNetwork","EventContract","networks","instance","Contract","abi","address","options","handleRevert","load_event_list","load_events","EventCreated","err","res","returnValues","event_id","alert","get_events","new_event","Map","all","get_event_info","set","updated_event","updatedEvents","delete","changeTab","AppBar","position","Tabs","indicatorColor","textColor","centered","aria-label","Tab","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b9d62f5.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, TextField, FormControlLabel, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nexport default class CreateEvent extends Component {\r\n  state = {\r\n    event_ID: null, \r\n    event_title: null, \r\n    sale_active: false, \r\n    buyback_active: false, \r\n    customer_limited: false, \r\n    tickets_per_customer: 1, \r\n    ticket_types: 1, \r\n    price_table: [], \r\n    deadline: null, \r\n    button_disabled: true, \r\n    event_ID_helperText: \"\",\r\n    confirmation_open: false,\r\n    confirmation_title: null,\r\n    confirmation_message: null,\r\n    event_created: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.set_ticket_types(1);\r\n  }\r\n\r\n  tickets_avail = [];\r\n  ticket_prices = [];\r\n  event_ID_hex = \"\";\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Create a new event</h2>\r\n\r\n        <TextField \r\n          id=\"event_ID\" \r\n          label=\"Unique event ID\" \r\n          helperText={this.state.event_ID_helperText}\r\n          variant=\"outlined\" \r\n          required={true} \r\n          onChange={e => this.update_event_ID(e.target.value) } />\r\n\r\n        <TextField \r\n          id=\"event_title\" \r\n          label=\"Event title\" \r\n          variant=\"outlined\" \r\n          required={true}\r\n          onChange={e => this.update_title(e.target.value) } />\r\n\r\n        <div><FormControlLabel\r\n          control={<Switch onChange={e => this.setState({sale_active: e.target.checked})} />}\r\n          label=\"Sale active on deployment\" /></div>\r\n\r\n        <div><FormControlLabel\r\n          control={<Switch onChange={e => this.setState({buyback_active: e.target.checked})} />}\r\n          label=\"Buyback active on deployment\" /></div>\r\n\r\n        <div><FormControlLabel\r\n          control={<Switch onChange={e => this.setState({customer_limited: e.target.checked})} />}\r\n          label=\"Limit number of tickets per customer\" /></div>\r\n        \r\n        {this.tickets_per_customer()}\r\n\r\n        <div><TextField \r\n          id=\"ticket_types\" \r\n          label=\"# of ticket types\" \r\n          variant=\"outlined\" \r\n          margin=\"normal\"\r\n          required={true}\r\n          type=\"number\"\r\n          defaultValue={1}\r\n          inputProps={{ min: \"1\", max: \"15\", step: \"1\" }}\r\n          onChange={e => this.set_ticket_types(e.target.value)} /></div>\r\n\r\n        {this.state.price_table}\r\n\r\n        <div>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              id=\"deadline\"\r\n              variant=\"inline\"\r\n              format=\"yyyy-MM-dd\"\r\n              margin=\"normal\"\r\n              label=\"Choose a deadline date\"\r\n              value={this.state.deadline}\r\n              onChange={d => this.update_deadline(d)}\r\n            />\r\n\t    <KeyboardTimePicker\r\n              margin=\"normal\"\r\n              id=\"time-picker\"\r\n              label=\"Choose a deadline time\"\r\n              value={this.state.deadline}\r\n              onChange={d => this.update_deadline(d)}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n\r\n        <div><Button\r\n          id=\"createButton\"\r\n          variant=\"contained\"\r\n          disabled={this.state.button_disabled}\r\n          onClick={() => { this.submit() }}\r\n        >Create Event</Button></div>\r\n        <Dialog\r\n          open={this.state.confirmation_open}\r\n          onClose={this.handle_close_confirmation}\r\n        >\r\n          <DialogTitle>{this.state.confirmation_title}</DialogTitle>\r\n          <DialogContent>\r\n            {this.state.confirmation_message}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handle_close_confirmation}>\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  tickets_per_customer() {\r\n    if (this.state.customer_limited) return (\r\n      <div><TextField \r\n        id=\"tickets_per_customer\" \r\n        label=\"Max. tickets / customer\" \r\n        variant=\"outlined\" \r\n        margin=\"normal\"\r\n        required={true}\r\n        type=\"number\"\r\n        defaultValue={1}\r\n        inputProps={{ min: \"1\", step: \"1\" }}\r\n        onChange={e => this.setState({tickets_per_customer: e.target.value})} /></div>\r\n    )\r\n  }\r\n\r\n  set_ticket_types = async (val) => {\r\n    val = Math.min(val,15);\r\n    await this.setState({ticket_types: val});\r\n    this.tickets_and_prices();\r\n    this.tickets_avail = new Array(val);\r\n    this.ticket_prices = new Array(val);\r\n    this.check_form();\r\n  }\r\n\r\n  open_confirmation = async (errorMessage) => {\r\n    if(this.state.event_created) {\r\n      await this.setState(\r\n        {\r\n          confirmation_title: \"Event successfully created!\", \r\n          confirmation_message: \"Your event with id \" + this.state.event_ID + \" has been created.\",\r\n          confirmation_open: true,\r\n        }\r\n      );\r\n    } else {\r\n      await this.setState(\r\n        {\r\n          confirmation_title: \"Error when creating event\", \r\n          confirmation_message: \"There was an error when trying to create event: \" + errorMessage,\r\n          confirmation_open: true,\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handle_close_confirmation = async () => {\r\n    await this.setState({confirmation_open: false});\r\n    if(this.state.event_created){\r\n      this.props.new_event_update(\r\n        this.props.web3.utils.padRight(\r\n          this.props.web3.utils.asciiToHex(this.state.event_ID), \r\n          64)); //call App.js to update event list and load the event into cache\r\n    }\r\n  }\r\n\r\n  tickets_and_prices() {\r\n    this.setState({price_table: []});\r\n    for (let i=0; i<this.state.ticket_types; i++) {\r\n      this.setState(prevState => ({ price_table: [prevState.price_table, (\r\n        <div key={i}><TextField \r\n          id={\"tickets_avail\" + i}\r\n          label=\"Nr. of tickets\"\r\n          variant=\"outlined\" \r\n          margin=\"normal\"\r\n          required={true}\r\n          type=\"number\"\r\n          inputProps={{ min: \"1\", step: \"1\" }}\r\n          onChange={e => { this.tickets_avail[i] = e.target.value; this.check_form() }}\r\n          helperText={\"Ticket type \" + (i+1)} />\r\n        <TextField \r\n          id={\"ticket_price\" + i}\r\n          label=\"Ticket price (ETH)\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required={true}\r\n          type=\"number\"\r\n          inputProps={{ min: \"0.000001\", step: \"0.000001\" }}\r\n          onChange={e => {\r\n            !!e.target.value ? this.ticket_prices[i] = this.props.web3.utils.toWei(e.target.value) : this.ticket_prices[i] = null; \r\n            this.check_form();\r\n          }}\r\n          /></div>\r\n      )]}))\r\n    }\r\n  }\r\n\r\n  update_deadline = async (val) => {\r\n    await this.setState({deadline: val});\r\n    this.check_form();\r\n  }\r\n\r\n  update_event_ID = async (val) => {\r\n    await this.setState({event_ID: val});\r\n    this.event_ID_hex = this.props.web3.utils.padRight(\r\n          this.props.web3.utils.asciiToHex(\r\n            this.state.event_ID), 64);\r\n    \r\n    this.check_form();\r\n  }\r\n\r\n  update_title = async (val) => {\r\n    await this.setState({title: val});\r\n    this.check_form();\r\n  }\r\n\r\n  check_form = async () => {\r\n    let button_state = this.check_fields();\r\n    await this.setState({button_disabled: button_state})\r\n  }\r\n\r\n  check_fields() {\r\n    if (typeof this.state.event_ID !== \"string\") return true;\r\n    if (typeof this.state.event_ID === \"string\" && this.state.event_ID.length < 1) return true;\r\n\r\n    if (this.props.event_list.includes(this.event_ID_hex)) {\r\n      this.setState({event_ID_helperText: \"Event ID is not available.\"});\r\n      return true;\r\n    } else this.setState({event_ID_helperText: \"Event ID is available.\"});\r\n      \r\n    if (typeof this.state.title !== \"string\") return true;\r\n    if (typeof this.state.title === \"string\" && this.state.title.length < 1) return true;\r\n    if (this.state.deadline == null) return true;\r\n\r\n    for (let i=0; i<this.state.ticket_types; i++) {\r\n      if (!this.tickets_avail[i] || !this.ticket_prices[i]) return true;\r\n      if (this.tickets_avail[i] < 1 || this.ticket_prices[i] < 1) return true; //avoid zero or negative ticket availability or prices\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  submit = async () => {\r\n    try {\r\n      await this.props.contract.methods.create_event(\r\n        this.props.web3.utils.asciiToHex(this.state.event_ID),\r\n        this.props.web3.utils.asciiToHex(this.state.title),\r\n        this.tickets_avail,\r\n        this.ticket_prices,\r\n        this.state.customer_limited,\r\n        this.state.tickets_per_customer,\r\n        this.state.sale_active,\r\n        this.state.buyback_active,\r\n        Math.round(this.state.deadline.getTime() / 1000)\r\n        ).send({from: this.props.accounts[0]});\r\n      await this.setState({event_created: true});\r\n      await this.open_confirmation(null);\r\n    } catch (error) {\r\n      console.log(\"Dev error: \");\r\n      console.log(error);\r\n      await this.open_confirmation(error.message);\r\n    }\r\n  }\r\n}\r\n","export function bytesToString(bytes){\r\n  bytes = bytes.replace('0x','');\r\n  let str = '';\r\n  for (var n = 0; n < bytes.length; n += 2) {\r\n    if(bytes.substr(n,2) == \"00\") break;\r\n    str += String.fromCharCode(parseInt(bytes.substr(n, 2), 16));\r\n  }\r\n  return str;\r\n}\r\n","export function getErrorMessage(error){\r\n  try {\r\n    let j = JSON.parse(error.message.substr(16, error.message.length-15));\r\n    return j.message;\r\n  } catch (e) {\r\n    return \"Unable to read error message.\";\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {TextField, Radio, RadioGroup, FormControl, FormControlLabel, Button } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { bytesToString } from '../util/conversion.js';\r\nimport { getErrorMessage } from '../util/EthErrorMsg.js';\r\nimport './EventList.css';\r\n\r\nexport default class EventListItem extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography className=\"heading\" \r\n            color={(this.props.event.sale_active && Date.now() < this.props.event.deadline*1000) ? \"primary\" : \"secondary\"}>\r\n            {bytesToString(this.props.event.title)}\r\n          </Typography>\r\n          <Typography className=\"secondaryHeading\">\r\n            {this.total_available_tickets()} available tickets\r\n          </Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails className=\"expansionPanelDetails\">\r\n          <BuyTicket \r\n            {...this.props}\r\n          />\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n\r\n  total_available_tickets() {\r\n    let sum = 0;\r\n    for (let i=0; i < this.props.event.available_tickets.length; i++) {\r\n      sum += parseInt(this.props.event.available_tickets[i]);\r\n    }\r\n    return sum;\r\n  }\r\n}\r\n\r\nexport class BuyTicket extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.buyTickets = this.buyTickets.bind(this);\r\n  }\r\n\r\n  state = {\r\n    ticket_type: 0, \r\n    num: 1, \r\n    button_state: this.props.event.available_tickets[0] > 0, \r\n    total: this.convert_to_eth(this.props.event.ticket_price[0])};\r\n\r\n  handleChange = async (event) => {\r\n    await this.setState({[event.target.name]: parseInt(event.target.value)});\r\n    await this.setState({total: this.convert_to_eth(this.props.event.ticket_price[this.state.ticket_type]*this.state.num)});\r\n    this.setState({button_state: this.check_choice() && this.state.total !== \"invalid\"})\r\n  }\r\n\r\n  check_choice() {\r\n    return (!!this.state.num && this.props.event.available_tickets[this.state.ticket_type] >= this.state.num);\r\n  }\r\n\r\n  convert_to_eth(val) {\r\n    let r;\r\n    try{\r\n      r = this.props.web3.utils.fromWei(val.toString()) + \" ETH\";\r\n    } catch(e) {\r\n      r = \"invalid\";\r\n    }\r\n    return r;\r\n  }\r\n\r\n  buyTickets = async () => {\r\n    try {\r\n      let total_value = this.props.event.ticket_price[this.state.ticket_type]*this.state.num;\r\n      await this.props.contract.methods.buy_tickets(this.props.eventId, this.state.ticket_type, this.state.num)\r\n        .send({from: this.props.accounts[0], value: total_value});\r\n      this.props.reload_event(this.props.eventId); //call to App.js to reload affected event\r\n\r\n    } catch (error){\r\n      console.log(getErrorMessage(error));\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return(\r\n      <>\r\n      <FormControl>\r\n        <TextField\r\n          label=\"Deadline\"\r\n          margin=\"normal\"\r\n          type=\"datetime-local\"\r\n          disabled={true}\r\n          error={Date.now() >= this.props.event.deadline*1000}\r\n          value={new Date(this.props.event.deadline*1000).toISOString().substr(0,16)}/>\r\n        <RadioGroup \r\n          value={this.state.ticket_type}\r\n          name=\"ticket_type\"\r\n          onChange={this.handleChange}\r\n        >\r\n        {this.props.event.available_tickets.map((e, i) => \r\n\r\n          <FormControlLabel\r\n            key={i}\r\n            value={i}\r\n            control={<Radio />}\r\n            label={\"Type \"+(i+1)+\" - Price: \"+this.props.web3.utils.fromWei(this.props.event.ticket_price[i])+\r\n                    \" ETH | Available: \"+this.props.event.available_tickets[i]}\r\n          />\r\n\r\n        )}\r\n        <br/><TextField\r\n          type=\"number\"\r\n          name=\"num\"\r\n          label=\"Number of tickets\"\r\n          required={true}\r\n          variant=\"outlined\"\r\n          disabled={!this.props.event.sale_active || Date.now() >= this.props.event.deadline*1000}\r\n          helperText={(!this.props.event.sale_active || Date.now() >= this.props.event.deadline*1000) ? \"Sale is closed for this event.\" : \"\"}\r\n          inputProps={{min: \"1\", max:this.props.event.available_tickets[this.state.ticket_type], step: \"1\"}}\r\n          defaultValue={1}\r\n          onChange={this.handleChange}\r\n        />\r\n        </RadioGroup>\r\n        Total: {this.state.total}\r\n        <Button\r\n          variant=\"contained\"\r\n          disabled={!this.state.button_state || !this.props.event.sale_active || Date.now() >= this.props.event.deadline*1000}\r\n          onClick={this.buyTickets}\r\n        > Buy tickets\r\n        </Button>\r\n      </FormControl>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport EventListItem from './EventListItem.js'\r\nimport './EventList.css';\r\n\r\nexport default class EventList extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        {this.props.event_list.map(e =>\r\n          <EventListItem \r\n            key={e}\r\n            eventId={e}\r\n            event={this.props.events.get(e)}\r\n            {...this.props}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport EventList from './EventList.js';\r\n\r\nexport default class BrowseEvents extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Browse Events</h2>\r\n        <EventList {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {TextField, ExpansionPanel, ExpansionPanelSummary, Button, \r\nExpansionPanelDetails, FormControl, List, ListItem } from '@material-ui/core';\r\n\r\nimport { bytesToString } from '../../util/conversion.js';\r\n\r\nexport default class TicketView extends Component {\r\n  state = {customer: null}\r\n\r\n  componentDidMount = async () => {\r\n    // get list of tickets\r\n    this.load_tickets();\r\n  }\r\n\r\n  load_tickets = async () => {\r\n    this.setState({tickets: \r\n      await this.props.contract.methods.get_tickets(this.props.eventId, this.props.accounts[0]).call()});\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          {!!(this.props.event)?bytesToString(this.props.event.title):\"loading..\"}\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <FormControl>\r\n            \r\n            {!!(this.state.tickets) ? this.list_tickets() : \"loading..\"}\r\n            <TextField\r\n              label=\"Deadline\"\r\n              margin=\"normal\"\r\n              type=\"datetime-local\"\r\n              disabled={true}\r\n              error={Date.now() >= this.props.event.deadline*1000}\r\n              value={new Date(this.props.event.deadline*1000).toISOString().substr(0,16)}/>\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              disabled={this.can_return_tickets()}\r\n              onClick={() => { this.return_tickets() }}\r\n              >{!this.can_return_tickets() ? \"Return All Tickets\" : \"Ticket return is disabled\"}</Button>\r\n          </FormControl>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n\r\n  can_return_tickets() {\r\n    return !!(this.state.tickets) ? \r\n      (!this.props.event.buyback_active \r\n      || !this.props.event.sale_active \r\n      || (this.state.tickets.length < 1)\r\n      || (Date.now() > this.props.event.deadline*1000)) :\r\n      true;\r\n  }\r\n\r\n  return_tickets = async () => {\r\n    let failed = true;\r\n    await this.props.contract.methods.return_tickets(this.props.eventId).estimateGas({from: this.props.accounts[0]})\r\n    .then(function(gasAmount){\r\n      failed = false;\r\n    })\r\n    .catch(function(error){\r\n      console.log(error);\r\n    });\r\n\r\n    if (!failed) {\r\n      await this.props.contract.methods.return_tickets(this.props.eventId).send({from: this.props.accounts[0]});\r\n      this.load_tickets();\r\n      this.props.reload_event(this.props.eventId);\r\n    }\r\n\r\n  }\r\n\r\n  list_tickets() {\r\n    if (this.state.tickets.length > 0) {\r\n      return(\r\n        <List dense={true}>\r\n          {this.state.tickets.map((e, i) => \r\n            {if(e > 0){\r\n              return <ListItem key={i}>Tickets of type {i+1}: {e}</ListItem>\r\n            }}\r\n          )}\r\n        </List>\r\n      );\r\n    } else {\r\n      return(\r\n        <div>No tickets found.</div>\r\n      );\r\n    }\r\n    \r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport TicketView from './MyTickets/TicketView.js';\r\n\r\nimport { getErrorMessage } from '../util/EthErrorMsg.js';\r\n\r\nexport default class MyTickets extends Component {\r\n\r\n  state = {participation: null}\r\n\r\n  componentDidMount = async () => {\r\n    // get events of which user owns tickets to\r\n    try {\r\n      let participation = await this.props.contract.methods.get_participation().call({from: this.props.accounts[0]})\r\n      this.setState({participation: participation});\r\n    } catch (error) {\r\n      console.log(getErrorMessage(error));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!!(this.state.participation) ? this.state.participation.map((e, i) =>\r\n          {if (this.props.events.has(e)) {\r\n            return(<TicketView\r\n              key={i}\r\n              accounts={this.props.accounts} \r\n              contract={this.props.contract}\r\n              eventId={e}\r\n              reload_event={this.props.reload_event}\r\n              event={this.props.events.get(e)} />)\r\n          } else return (\"No tickets found.\")} \r\n\r\n        ):\"No tickets found...\"}\r\n          \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TextField, ExpansionPanel, ExpansionPanelSummary, Button, Select, FormHelperText, \r\nExpansionPanelDetails, Chip, Avatar, FormControl, MenuItem, List, ListItem, \r\nDialog, DialogTitle, DialogContent, DialogActions} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { bytesToString } from '../../util/conversion.js';\r\nimport { getErrorMessage } from '../../util/EthErrorMsg.js';\r\n\r\nexport default class OwnedEvent extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer_list: [], \r\n      view_funds: false, \r\n      funds: 0, \r\n      confirmation_open: false,\r\n      confirmation_title: null, \r\n      confirmation_message: null,\r\n      event_deleted: false}\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.event) {\r\n      return <div>Loading event data..</div>;\r\n    }\r\n\r\n    return (\r\n      <div><ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          {!!(this.props.event)?bytesToString(this.props.event.title):\"loading..\"}\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <FormControl>\r\n            <Chip\r\n              avatar={<Avatar>S</Avatar>}\r\n              label=\"Sale Status\"\r\n              color={this.get_color(this.props.event.sale_active)}\r\n              clickable\r\n              onClick={() => this.handleActivateSale(this.props.event.sale_active)}\r\n              variant=\"outlined\"/>\r\n            <Chip\r\n              avatar={<Avatar>B</Avatar>}\r\n              label=\"Buyback Status\"\r\n              color={this.get_color(this.props.event.buyback_active)}\r\n              variant=\"outlined\"/>\r\n            <TextField\r\n              label=\"Deadline\"\r\n              margin=\"normal\"\r\n              type=\"datetime-local\"\r\n              disabled={true}\r\n              error={Date.now() >= this.props.event.deadline*1000}\r\n              value={new Date(this.props.event.deadline*1000).toISOString().substr(0,16)}\r\n            />\r\n\r\n            <br/>\r\n\r\n            <List dense={true}>\r\n              {this.props.event.available_tickets.map((e,i) => \r\n                <ListItem key={i}>\r\n                  Ticket type {i+1} - Available tickets: \r\n                  {this.props.event.available_tickets[i]} | Ticket price: \r\n                  {this.props.web3.utils.fromWei(this.props.event.ticket_price[i])} ETH\r\n                </ListItem>\r\n              )}\r\n            </List>\r\n            <br/>\r\n\r\n            <Chip\r\n              label={\"View funds: \" + (this.state.view_funds? (this.props.web3.utils.fromWei(this.state.funds) + \" ETH\") : \"...\")}\r\n              variant=\"outlined\"\r\n              clickable\r\n              onClick={() => this.view_funds()} /> <br/>\r\n\r\n            <div><Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={(Date.now() < this.props.event.deadline*1000) || this.state.funds <= 0}\r\n              onClick={() => { this.withdraw_funds() }}\r\n              >Withdraw funds</Button></div><br/>\r\n\r\n            <AddTickets\r\n              {...this.props}\r\n              tickets={this.props.event.available_tickets}/>\r\n\r\n            <ChangePrices\r\n              {...this.props}\r\n              prices={this.props.event.ticket_price}/>\r\n            <br/>\r\n\r\n            <div><Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => { this.get_customer_list() }}\r\n              >Load customer list</Button></div>\r\n\r\n            <List dense={true}>\r\n              {this.state.customer_list.map((e, i) => \r\n                <ListItem key={i}>\r\n                  {e}\r\n                </ListItem>\r\n              )}\r\n            </List>\r\n\r\n            <div><Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disabled={(Date.now() < (this.props.event.deadline+604800)*1000) || this.state.funds > 0}\r\n              onClick={() => this.setState({\r\n                confirmation_title: \"Delete Event\", \r\n                confirmation_open: true,\r\n                confirmation_message: \"Deletion of event is irreversible - Confirm?\"})}\r\n              >Delete Event</Button></div>\r\n\r\n          </FormControl>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n      <Dialog\r\n        open={this.state.confirmation_open}\r\n        onClose={this.handle_close_confirmation}\r\n      >\r\n        <DialogTitle>{this.state.confirmation_title}</DialogTitle>\r\n        <DialogContent>\r\n          {this.state.confirmation_message}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"secondary\"\r\n            disabled={(Date.now() < (this.props.event.deadline/*+604800*/)*1000) || this.state.funds > 0 || this.state.event_deleted}\r\n            onClick={() => this.delete_event()}\r\n          >Delete Event</Button>\r\n          <Button onClick={this.handle_close_confirmation}>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog></div>\r\n    );\r\n  }\r\n\r\n  handle_close_confirmation = async () => {\r\n    await this.setState({confirmation_open: false});\r\n    if(this.state.event_deleted){\r\n      await this.props.delete_event(this.props.eventId);\r\n    }\r\n  }\r\n\r\n  delete_event = async () => {\r\n    try {\r\n      await this.props.contract.methods.delete_event(this.props.eventId).send({from: this.props.accounts[0]});\r\n      await this.setState({\r\n        event_deleted: true,\r\n        confirmation_title: \"Event deleted\",\r\n        confirmation_message: \"Event has been permanently deleted.\"});\r\n    } catch (error) {\r\n      await this.setState({\r\n        confirmation_title: \"Event deletion failed\",\r\n        confirmation_message: \"Event was not deleted - transaction failed. \\n\" + getErrorMessage(error)});\r\n    }\r\n  }\r\n\r\n  get_color(activator) {\r\n    if (activator) return \"primary\" \r\n    else return \"secondary\";\r\n  }\r\n\r\n  handleActivateSale = async (activator) => {\r\n    try {\r\n      if (activator) {\r\n        await this.props.contract.methods.stop_sale(this.props.eventId).send({from: this.props.accounts[0]});\r\n      } else {\r\n        await this.props.contract.methods.continue_sale(this.props.eventId).send({from: this.props.accounts[0]});\r\n      }\r\n      this.props.reload_event(this.props.eventId); //call to App.js to reload affected event\r\n    \r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n\r\n  view_funds = async () => {\r\n    if (!this.state.view_funds) {\r\n      try{\r\n        this.setState({funds: await this.props.contract.methods.view_funds(\r\n          this.props.eventId\r\n          ).call({from: this.props.accounts[0]})});\r\n        this.setState({view_funds: true})\r\n      } catch (error) {\r\n        console.log(\"Dev error: \" + error.message);\r\n      }\r\n    } else {\r\n      this.setState({view_funds: false})\r\n    }\r\n  }\r\n\r\n  withdraw_funds = async () => {\r\n    try{\r\n      // attempt to withdraw funds\r\n      await this.props.contract.methods.withdraw_funds(this.props.eventId)\r\n        .send({from: this.props.accounts[0]});\r\n\r\n      //update current funds display\r\n      this.setState({funds: await this.props.contract.methods.view_funds(\r\n        this.props.eventId\r\n        ).call({from: this.props.accounts[0]})});\r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n\r\n  get_customer_list = async () => {\r\n    try {\r\n      this.setState({customer_list: await this.props.contract.methods.get_customers(\r\n        this.props.eventId\r\n        ).call({from: this.props.accounts[0]})});\r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n}\r\n\r\nexport class AddTickets extends Component {\r\n  addTickets = new Array(this.props.tickets.length).fill(\"0\");\r\n\r\n  render() {\r\n    return(\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          Add tickets\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <FormControl>\r\n            {this.props.tickets.map((e, i) => \r\n              <TextField \r\n                key={i}\r\n                id={\"tickets_to_add\" + i}\r\n                label=\"Tickets to add\"\r\n                variant=\"outlined\" \r\n                margin=\"normal\"\r\n                required={false}\r\n                type=\"number\"\r\n                defaultValue=\"0\"\r\n                onChange={e => this.addTickets[i] = e.target.value}\r\n                inputProps={{ min: \"0\", step: \"1\" }}\r\n                helperText={\"Ticket type \" + (i+1)} />\r\n            )}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => { this.submit() }}\r\n              >Add</Button>\r\n          </FormControl>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n\r\n  submit = async () => {\r\n    try {\r\n      await this.props.contract.methods.add_tickets(\r\n        this.props.eventId,\r\n        this.addTickets\r\n        ).send({from: this.props.accounts[0]});\r\n      this.props.reload_event(this.props.eventId); //call to App.js to reload affected event\r\n\r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n}\r\n\r\nexport class ChangePrices extends Component {\r\n  state = {ticketType: 0, newPrice: this.props.prices[0], button_state: false}\r\n\r\n  render() {\r\n    return(\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          Change prices\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <FormControl>\r\n            <FormHelperText>Ticket type to change</FormHelperText>\r\n            <Select\r\n              labelId=\"Ticket type to change\"\r\n              value={this.state.ticketType}\r\n              onChange={e => this.setState({ticketType: e.target.value})}\r\n            >\r\n              {this.props.prices.map((e, i) => \r\n                <MenuItem key={i} value={i}>{i+1}</MenuItem>\r\n              )}\r\n            </Select>\r\n            \r\n            <TextField \r\n                id={\"new_price\"}\r\n                label=\"New price (ETH)\"\r\n                variant=\"outlined\" \r\n                margin=\"normal\"\r\n                required={true}\r\n                type=\"number\"\r\n                defaultValue={this.props.prices[this.state.ticketType]}\r\n                onChange={e => {\r\n                  !!e.target.value ? this.setState({newPrice: this.props.web3.utils.toWei(e.target.value)}) : \r\n                    this.setState({newPrice: null});\r\n                  this.check_input(e.target.value);\r\n                }}\r\n                inputProps={{ min: \"0.000001\", step: \"0.000001\" }}/>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => { this.submit() }}\r\n              disabled={this.state.button_state}\r\n              >Change price</Button>\r\n          </FormControl>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n\r\n  check_input(input) {\r\n    let s = (!input || input < 0.000001);\r\n    this.setState({button_state: s });\r\n  }\r\n\r\n  submit = async () => {\r\n    try {\r\n      await this.props.contract.methods.change_ticket_price(\r\n        this.props.eventId,\r\n        this.state.ticketType,\r\n        this.state.newPrice\r\n        ).send({from: this.props.accounts[0]});\r\n      this.props.reload_event(this.props.eventId); //call to App.js to reload affected event\r\n\r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport OwnedEvent from './MyEvents/OwnedEvent.js';\r\n\r\nexport default class MyEvents extends Component {\r\n  owned_events = [];\r\n  constructor() {\r\n    super();\r\n    this.state = {owned_events: []}\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    // extract list of owned events from all events\r\n    this.props.event_list.map(async (eventId) => {\r\n      let event = this.props.events.get(eventId);\r\n      if (event.owner === this.props.accounts[0]) {\r\n        this.owned_events.push(eventId);\r\n      }\r\n    });\r\n\r\n    this.setState({owned_events: this.owned_events});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.owned_events.map((e, i) =>\r\n          <OwnedEvent\r\n            key={i}\r\n            accounts={this.props.accounts} \r\n            contract={this.props.contract}\r\n            eventId={e} \r\n            event={this.props.events.get(e)}\r\n            reload_event={this.props.reload_event}\r\n            delete_event={this.props.delete_event}\r\n            web3={this.props.web3}/>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport EventContract from \"./contracts/EventContract.json\";\r\nimport getWeb3 from \"./getWeb3\";\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Typography, AppBar, Tabs, Tab, Backdrop, CircularProgress, FormControl } from '@material-ui/core';\r\n\r\nimport \"./App.css\";\r\nimport CreateEvent from \"./components/CreateEvent\";\r\nimport BrowseEvents from \"./components/BrowseEvents\";\r\nimport MyTickets from \"./components/MyTickets\";\r\nimport MyEvents from \"./components/MyEvents\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`app-tabpanel-${index}`}\r\n      aria-labelledby={`app-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction tabProps(index) {\r\n  return {\r\n    id: `app-tab-${index}`,\r\n    'aria-controls': `app-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction SimpleBackdrop() {\r\n  return (\r\n    <div>\r\n      <Backdrop  open={true}>\r\n        <FormControl>\r\n          <CircularProgress color=\"inherit\" />\r\n          Loading contract data...\r\n        </FormControl>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass App extends Component {\r\n  state = { web3: null, accounts: null, contract: null, activeTab: 3 };\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = EventContract.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        EventContract.abi,\r\n        deployedNetwork.address\r\n      );\r\n\r\n      instance.options.handleRevert = true;\r\n\r\n      // Set web3, accounts, and contract to the state\r\n      this.setState({ web3, accounts, contract: instance});\r\n\r\n      // load list of event IDs\r\n      await this.load_event_list();\r\n\r\n      // cache all events\r\n      await this.load_events();\r\n\r\n      // Listen for the EventCreated event to be emitted from the contract\r\n      instance.events.EventCreated(async (err, res) => {\r\n        if(!err){\r\n          await this.reload_event(res.returnValues.event_id);\r\n          await this.load_event_list();\r\n        }\r\n      });\r\n\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  load_event_list = async () => {\r\n    let event_list = await this.state.contract.methods.get_events().call();\r\n    this.setState({event_list: event_list});\r\n  }\r\n\r\n  new_event = async (event_id) => {\r\n    await this.setState({activeTab: 2});\r\n  }\r\n\r\n  load_events = async () => {\r\n    let events = new Map();\r\n    await Promise.all(this.state.event_list.map(async (event) => {\r\n      events.set(event, await this.state.contract.methods.get_event_info(event).call());\r\n    }));\r\n    this.setState({ events: events });\r\n  }\r\n\r\n  reload_event = async (event_id) => {\r\n    let updated_event = await this.state.contract.methods.get_event_info(event_id).call();\r\n    this.setState((prevState) => {\r\n      let updatedEvents = new Map(prevState.events);\r\n      return { events: updatedEvents.set(event_id, updated_event)};\r\n    });\r\n  }\r\n\r\n  delete_event = async (event_id) => {\r\n    await this.load_event_list();\r\n    this.setState((prevState) => {\r\n      let updatedEvents = new Map(prevState.events);\r\n      updatedEvents.delete(event_id);\r\n      return { events: updatedEvents};\r\n    });\r\n  }\r\n\r\n  changeTab = (event, value) => {\r\n    this.setState({ activeTab: value });\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.state.web3 || !this.state.events) {\r\n      return <SimpleBackdrop/>;\r\n    }\r\n\r\n    return (\r\n \r\n      <div className=\"App\">\r\n        <AppBar position=\"static\">\r\n            <Tabs\r\n                value={this.state.activeTab}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered={true}\r\n                onChange={this.changeTab}\r\n                aria-label=\"simple tabs example\"\r\n            >\r\n                <Tab label=\"Browse events\" {...tabProps(0)} />\r\n                <Tab label=\"My tickets\" {...tabProps(1)} />\r\n                <Tab label=\"My events\" {...tabProps(2)} />\r\n                <Tab label=\"Create event\" {...tabProps(3)} />\r\n            </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={this.state.activeTab} index={0}>\r\n          <BrowseEvents \r\n            contract={this.state.contract} \r\n            accounts={this.state.accounts}\r\n            event_list={this.state.event_list}\r\n            events={this.state.events}\r\n            reload_event={this.reload_event}\r\n            web3={this.state.web3}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={this.state.activeTab} index={1}>\r\n            <MyTickets \r\n              accounts={this.state.accounts} \r\n              contract={this.state.contract}\r\n              reload_event={this.reload_event}\r\n              events={this.state.events}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={this.state.activeTab} index={2}>\r\n            <MyEvents\r\n              accounts={this.state.accounts} \r\n              contract={this.state.contract} \r\n              event_list={this.state.event_list}\r\n              events={this.state.events}\r\n              reload_event={this.reload_event}\r\n              delete_event={this.delete_event}\r\n              web3={this.state.web3}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={this.state.activeTab} index={3}>\r\n            <CreateEvent \r\n              event_list={this.state.event_list}\r\n              web3={this.state.web3} \r\n              accounts={this.state.accounts} \r\n              contract={this.state.contract}\r\n              new_event_update={this.new_event}/>\r\n        </TabPanel>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}