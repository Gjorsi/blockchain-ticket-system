{"version":3,"sources":["getWeb3.js","components/CreateEvent.js","util/conversion.js","util/EthErrorMsg.js","components/EventListItem.js","components/EventList.js","components/BrowseEvents.js","components/MyTickets/TicketView.js","components/MyTickets.js","components/MyEvents/OwnedEvent.js","components/MyEvents.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","CreateEvent","state","event_ID","event_title","sale_active","buyback_active","customer_limited","tickets_per_customer","ticket_types","price_table","deadline","button_disabled","event_ID_helperText","error_open","error_title","error_message","tickets_avail","ticket_prices","event_ID_hex","set_ticket_types","val","Math","min","setState","tickets_and_prices","Array","check_form","open_error","errorMessage","handle_close_error","update_deadline","update_event_ID","props","utils","padRight","asciiToHex","update_title","title","button_state","check_fields","submit","contract","methods","create_event","round","getTime","send","from","accounts","on","tx","add_pending_tx","num","receipt","confirm","transactionHash","message","this","TextField","id","label","helperText","variant","required","onChange","e","target","value","FormControlLabel","control","Switch","checked","margin","type","defaultValue","inputProps","max","step","DateFnsUtils","format","d","Button","disabled","onClick","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","i","prevState","key","toWei","length","event_list","includes","Component","bytesToString","bytes","replace","str","n","substr","String","fromCharCode","parseInt","getErrorMessage","error","JSON","parse","EventListItem","ExpansionPanel","ExpansionPanelSummary","expandIcon","Typography","className","color","event","Date","now","total_available_tickets","ExpansionPanelDetails","sum","available_tickets","BuyTicket","ticket_type","total","convert_to_eth","ticket_price","handleChange","name","check_choice","buyTickets","total_value","buy_tickets","eventId","reload_event","bind","r","fromWei","toString","FormControl","toISOString","RadioGroup","map","Radio","EventList","events","get","BrowseEvents","TicketView","customer","componentDidMount","load_tickets","get_tickets","call","tickets","return_tickets","failed","estimateGas","then","gasAmount","catch","list_tickets","can_return_tickets","List","dense","ListItem","MyTickets","participation","get_participation","has","OwnedEvent","handle_close_confirmation","confirmation_open","event_deleted","delete_event","confirmation_title","confirmation_message","handleActivateSale","activator","stop_sale","continue_sale","view_funds","funds","withdraw_funds","get_customer_list","get_customers","customer_list","Chip","avatar","Avatar","get_color","clickable","prices","AddTickets","addTickets","fill","add_tickets","ChangePrices","ticketType","newPrice","change_ticket_price","FormHelperText","Select","labelId","MenuItem","check_input","input","s","MyEvents","owned_events","owner","push","PendingButton","styled","orange","ConfirmedButton","green","TabPanel","children","index","other","component","role","hidden","aria-labelledby","Box","p","tabProps","SimpleBackdrop","Backdrop","CircularProgress","App","activeTab","pending","confirmed","eth","getAccounts","net","getId","networkId","deployedNetwork","EventContract","networks","instance","Contract","abi","address","options","handleRevert","load_event_list","load_events","EventCreated","err","res","returnValues","event_id","alert","get_events","Map","all","get_event_info","set","updated_event","updatedEvents","delete","changeTab","splice","indexOf","AppBar","position","short","substring","conf","Tabs","indicatorColor","textColor","centered","aria-label","Tab","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4uwwBAqCeA,EAnCC,kBACd,IAAIC,SAAQ,SAACC,EAASC,GAEpBC,OAAOC,iBAAiB,OAAxB,sBAAgC,kCAAAC,EAAA,0DAE1BF,OAAOG,SAFmB,wBAGtBC,EAAO,IAAIC,IAAKL,OAAOG,UAHD,kBAMpBH,OAAOG,SAASG,SANI,OAQ1BR,EAAQM,GARkB,gDAU1BL,EAAO,EAAD,IAVoB,gCAcrBC,OAAOI,MAERA,EAAOJ,OAAOI,KACpBG,QAAQC,IAAI,2BACZV,EAAQM,KAIFK,EAAW,IAAIJ,IAAKK,UAAUC,aAClC,yBAEIP,EAAO,IAAIC,IAAKI,GACtBF,QAAQC,IAAI,gDACZV,EAAQM,IA3BoB,8D,sNCAfQ,E,2MACnBC,MAAQ,CACNC,SAAU,KACVC,YAAa,KACbC,aAAa,EACbC,gBAAgB,EAChBC,kBAAkB,EAClBC,qBAAsB,EACtBC,aAAc,EACdC,YAAa,GACbC,SAAU,KACVC,iBAAiB,EACjBC,oBAAqB,GACrBC,YAAY,EACZC,YAAa,KACbC,cAAe,M,EAOjBC,cAAgB,G,EAChBC,cAAgB,G,EAChBC,aAAe,G,EA6GfC,iB,uCAAmB,WAAOC,GAAP,SAAA9B,EAAA,6DACjB8B,EAAMC,KAAKC,IAAIF,EAAI,IADF,SAEX,EAAKG,SAAS,CAACf,aAAcY,IAFlB,OAGjB,EAAKI,qBACL,EAAKR,cAAgB,IAAIS,MAAML,GAC/B,EAAKH,cAAgB,IAAIQ,MAAML,GAC/B,EAAKM,aANY,2C,wDASnBC,W,uCAAa,WAAOC,GAAP,SAAAtC,EAAA,sEACL,EAAKiC,SACT,CACET,YAAa,4BACbC,cAAe,mDAAqDa,EACpEf,YAAY,IALL,2C,wDAUbgB,mB,sBAAqB,sBAAAvC,EAAA,sEACb,EAAKiC,SAAS,CAACV,YAAY,IADd,2C,EAmCrBiB,gB,uCAAkB,WAAOV,GAAP,SAAA9B,EAAA,sEACV,EAAKiC,SAAS,CAACb,SAAUU,IADf,OAEhB,EAAKM,aAFW,2C,wDAKlBK,gB,uCAAkB,WAAOX,GAAP,SAAA9B,EAAA,sEACV,EAAKiC,SAAS,CAACrB,SAAUkB,IADf,OAEhB,EAAKF,aAAe,EAAKc,MAAMxC,KAAKyC,MAAMC,SACpC,EAAKF,MAAMxC,KAAKyC,MAAME,WACpB,EAAKlC,MAAMC,UAAW,IAE9B,EAAKwB,aANW,2C,wDASlBU,a,uCAAe,WAAOhB,GAAP,SAAA9B,EAAA,sEACP,EAAKiC,SAAS,CAACc,MAAOjB,IADf,OAEb,EAAKM,aAFQ,2C,wDAKfA,W,sBAAa,4BAAApC,EAAA,6DACPgD,EAAe,EAAKC,eADb,SAEL,EAAKhB,SAAS,CAACZ,gBAAiB2B,IAF3B,2C,EA0BbE,O,sBAAS,sBAAAlD,EAAA,+EAEC,EAAK0C,MAAMS,SAASC,QAAQC,aAChC,EAAKX,MAAMxC,KAAKyC,MAAME,WAAW,EAAKlC,MAAMC,UAC5C,EAAK8B,MAAMxC,KAAKyC,MAAME,WAAW,EAAKlC,MAAMoC,OAC5C,EAAKrB,cACL,EAAKC,cACL,EAAKhB,MAAMK,iBACX,EAAKL,MAAMM,qBACX,EAAKN,MAAMG,YACX,EAAKH,MAAMI,eACXgB,KAAKuB,MAAM,EAAK3C,MAAMS,SAASmC,UAAY,MACzCC,KAAK,CAACC,KAAM,EAAKf,MAAMgB,SAAS,KACjCC,GAAG,mBAAmB,SAACC,GACtB,EAAKlB,MAAMmB,eAAeD,MAE3BD,GAAG,gBAAgB,SAACG,EAAKC,GACd,GAAPD,GACD,EAAKpB,MAAMsB,QAAQD,EAAQE,oBAlB5B,8DAsBL5D,QAAQC,IAAI,eACZD,QAAQC,IAAR,MAvBK,UAwBC,EAAK+B,WAAW,KAAM6B,SAxBvB,yD,mFArNPC,KAAKtC,iBAAiB,K,+BAOd,IAAD,OACP,OACE,6BACE,kDAEA,kBAACuC,EAAA,EAAD,CACEC,GAAG,WACHC,MAAM,kBACNC,WAAYJ,KAAKxD,MAAMW,oBACvBkD,QAAQ,WACRC,UAAU,EACVC,SAAU,SAAAC,GAAC,OAAI,EAAKlC,gBAAgBkC,EAAEC,OAAOC,UAE/C,kBAACT,EAAA,EAAD,CACEC,GAAG,cACHC,MAAM,cACNE,QAAQ,WACRC,UAAU,EACVC,SAAU,SAAAC,GAAC,OAAI,EAAK7B,aAAa6B,EAAEC,OAAOC,UAE5C,6BAAK,kBAACC,EAAA,EAAD,CACHC,QAAS,kBAACC,EAAA,EAAD,CAAQN,SAAU,SAAAC,GAAC,OAAI,EAAK1C,SAAS,CAACnB,YAAa6D,EAAEC,OAAOK,aACrEX,MAAM,+BAER,6BAAK,kBAACQ,EAAA,EAAD,CACHC,QAAS,kBAACC,EAAA,EAAD,CAAQN,SAAU,SAAAC,GAAC,OAAI,EAAK1C,SAAS,CAAClB,eAAgB4D,EAAEC,OAAOK,aACxEX,MAAM,kCAER,6BAAK,kBAACQ,EAAA,EAAD,CACHC,QAAS,kBAACC,EAAA,EAAD,CAAQN,SAAU,SAAAC,GAAC,OAAI,EAAK1C,SAAS,CAACjB,iBAAkB2D,EAAEC,OAAOK,aAC1EX,MAAM,0CAEPH,KAAKlD,uBAEN,6BAAK,kBAACmD,EAAA,EAAD,CACHC,GAAG,eACHC,MAAM,oBACNE,QAAQ,WACRU,OAAO,SACPT,UAAU,EACVU,KAAK,SACLC,aAAc,EACdC,WAAY,CAAErD,IAAK,IAAKsD,IAAK,KAAMC,KAAM,KACzCb,SAAU,SAAAC,GAAC,OAAI,EAAK9C,iBAAiB8C,EAAEC,OAAOC,WAE/CV,KAAKxD,MAAMQ,YAEZ,6BACE,kBAAC,IAAD,CAAyBwB,MAAO6C,KAC9B,kBAAC,IAAD,CACEnB,GAAG,WACHG,QAAQ,SACRiB,OAAO,aACPP,OAAO,SACPZ,MAAM,yBACNO,MAAOV,KAAKxD,MAAMS,SAClBsD,SAAU,SAAAgB,GAAC,OAAI,EAAKlD,gBAAgBkD,MAE7C,kBAAC,IAAD,CACSR,OAAO,SACPb,GAAG,cACHC,MAAM,yBACNO,MAAOV,KAAKxD,MAAMS,SAClBsD,SAAU,SAAAgB,GAAC,OAAI,EAAKlD,gBAAgBkD,QAK1C,6BAAK,kBAACC,EAAA,EAAD,CACHtB,GAAG,eACHG,QAAQ,YACRoB,SAAUzB,KAAKxD,MAAMU,gBACrBwE,QAAS,WAAQ,EAAK3C,WAJnB,iBAML,kBAAC4C,EAAA,EAAD,CACEC,KAAM5B,KAAKxD,MAAMY,WACjByE,QAAS7B,KAAK5B,oBAEd,kBAAC0D,EAAA,EAAD,KAAc9B,KAAKxD,MAAMa,aACzB,kBAAC0E,EAAA,EAAD,KACG/B,KAAKxD,MAAMc,eAEd,kBAAC0E,EAAA,EAAD,KACE,kBAACR,EAAA,EAAD,CAAQE,QAAS1B,KAAK5B,oBAAtB,c,6CASc,IAAD,OACrB,GAAI4B,KAAKxD,MAAMK,iBAAkB,OAC/B,6BAAK,kBAACoD,EAAA,EAAD,CACHC,GAAG,uBACHC,MAAM,0BACNE,QAAQ,WACRU,OAAO,SACPT,UAAU,EACVU,KAAK,SACLC,aAAc,EACdC,WAAY,CAAErD,IAAK,IAAKuD,KAAM,KAC9Bb,SAAU,SAAAC,GAAC,OAAI,EAAK1C,SAAS,CAAChB,qBAAsB0D,EAAEC,OAAOC,c,2CA2B7C,IAAD,OACnBV,KAAKlC,SAAS,CAACd,YAAa,KAC5B,IAFmB,eAEViF,GACP,EAAKnE,UAAS,SAAAoE,GAAS,MAAK,CAAElF,YAAa,CAACkF,EAAUlF,YACpD,yBAAKmF,IAAKF,GAAG,kBAAChC,EAAA,EAAD,CACXC,GAAI,gBAAkB+B,EACtB9B,MAAM,iBACNE,QAAQ,WACRU,OAAO,SACPT,UAAU,EACVU,KAAK,SACLE,WAAY,CAAErD,IAAK,IAAKuD,KAAM,KAC9Bb,SAAU,SAAAC,GAAO,EAAKjD,cAAc0E,GAAKzB,EAAEC,OAAOC,MAAO,EAAKzC,cAC9DmC,WAAY,gBAAkB6B,EAAE,KAClC,kBAAChC,EAAA,EAAD,CACEC,GAAI,eAAiB+B,EACrB9B,MAAM,qBACNE,QAAQ,WACRU,OAAO,SACPT,UAAU,EACVU,KAAK,SACLE,WAAY,CAAErD,IAAK,WAAYuD,KAAM,YACrCb,SAAU,SAAAC,GACNA,EAAEC,OAAOC,MAAQ,EAAKlD,cAAcyE,GAAK,EAAK1D,MAAMxC,KAAKyC,MAAM4D,MAAM5B,EAAEC,OAAOC,OAAS,EAAKlD,cAAcyE,GAAK,KACjH,EAAKhE,uBAtBJgE,EAAE,EAAGA,EAAEjC,KAAKxD,MAAMO,aAAckF,IAAM,EAAtCA,K,qCAsDT,GAAmC,kBAAxBjC,KAAKxD,MAAMC,SAAuB,OAAO,EACpD,GAAmC,kBAAxBuD,KAAKxD,MAAMC,UAAyBuD,KAAKxD,MAAMC,SAAS4F,OAAS,EAAG,OAAO,EAEtF,GAAIrC,KAAKzB,MAAM+D,WAAWC,SAASvC,KAAKvC,cAEtC,OADAuC,KAAKlC,SAAS,CAACX,oBAAqB,gCAC7B,EAGT,GAFO6C,KAAKlC,SAAS,CAACX,oBAAqB,2BAEX,kBAArB6C,KAAKxD,MAAMoC,MAAoB,OAAO,EACjD,GAAgC,kBAArBoB,KAAKxD,MAAMoC,OAAsBoB,KAAKxD,MAAMoC,MAAMyD,OAAS,EAAG,OAAO,EAChF,GAA2B,MAAvBrC,KAAKxD,MAAMS,SAAkB,OAAO,EAExC,IAAK,IAAIgF,EAAE,EAAGA,EAAEjC,KAAKxD,MAAMO,aAAckF,IAAK,CAC5C,IAAKjC,KAAKzC,cAAc0E,KAAOjC,KAAKxC,cAAcyE,GAAI,OAAO,EAC7D,GAAIjC,KAAKzC,cAAc0E,GAAK,GAAKjC,KAAKxC,cAAcyE,GAAK,EAAG,OAAO,EAGrE,OAAO,M,GArO8BO,a,+ECLlC,SAASC,GAAcC,GAC5BA,EAAQA,EAAMC,QAAQ,KAAK,IAE3B,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAIH,EAAML,QACA,MAArBK,EAAMI,OAAOD,EAAE,GADcA,GAAK,EAErCD,GAAOG,OAAOC,aAAaC,SAASP,EAAMI,OAAOD,EAAG,GAAI,KAE1D,OAAOD,ECPF,SAASM,GAAgBC,GAC9B,IAEE,OADQC,KAAKC,MAAMF,EAAMpD,QAAQ+C,OAAO,GAAIK,EAAMpD,QAAQsC,OAAO,KACxDtC,QACT,MAAOS,GACP,MAAO,iC,WCOU8C,G,iLAGjB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAuBC,WAAY,kBAAC,KAAD,OACjC,kBAACC,EAAA,EAAD,CAAYC,UAAU,UACpBC,MAAQ5D,KAAKzB,MAAMsF,MAAMlH,aAAemH,KAAKC,MAAkC,IAA1B/D,KAAKzB,MAAMsF,MAAM5G,SAAiB,UAAY,aAClGwF,GAAczC,KAAKzB,MAAMsF,MAAMjF,QAElC,kBAAC8E,EAAA,EAAD,CAAYC,UAAU,oBACnB3D,KAAKgE,0BADR,uBAIF,kBAACC,EAAA,EAAD,CAAuBN,UAAU,yBAC/B,kBAAC,GACK3D,KAAKzB,W,gDASjB,IADA,IAAI2F,EAAM,EACDjC,EAAE,EAAGA,EAAIjC,KAAKzB,MAAMsF,MAAMM,kBAAkB9B,OAAQJ,IAC3DiC,GAAOjB,SAASjD,KAAKzB,MAAMsF,MAAMM,kBAAkBlC,IAErD,OAAOiC,M,GA5BgC1B,aAgC9B4B,GAAb,YACE,WAAY7F,GAAO,IAAD,8BAChB,4CAAMA,KAKR/B,MAAQ,CACN6H,YAAa,EACb1E,IAAK,EACLd,aAAc,EAAKN,MAAMsF,MAAMM,kBAAkB,GAAK,EACtDG,MAAO,EAAKC,eAAe,EAAKhG,MAAMsF,MAAMW,aAAa,KAVzC,EAYlBC,aAZkB,uCAYH,WAAOZ,GAAP,SAAAhI,EAAA,sEACP,EAAKiC,SAAL,eAAgB+F,EAAMpD,OAAOiE,KAAOzB,SAASY,EAAMpD,OAAOC,SADnD,uBAEP,EAAK5C,SAAS,CAACwG,MAAO,EAAKC,eAAe,EAAKhG,MAAMsF,MAAMW,aAAa,EAAKhI,MAAM6H,aAAa,EAAK7H,MAAMmD,OAFpG,OAGb,EAAK7B,SAAS,CAACe,aAAc,EAAK8F,gBAAuC,YAArB,EAAKnI,MAAM8H,QAHlD,2CAZG,wDAgClBM,WAhCkB,sBAgCL,4BAAA/I,EAAA,sEAELgJ,EAAc,EAAKtG,MAAMsF,MAAMW,aAAa,EAAKhI,MAAM6H,aAAa,EAAK7H,MAAMmD,IAF1E,SAGH,EAAKpB,MAAMS,SAASC,QAAQ6F,YAAY,EAAKvG,MAAMwG,QAAS,EAAKvI,MAAM6H,YAAa,EAAK7H,MAAMmD,KAClGN,KAAK,CAACC,KAAM,EAAKf,MAAMgB,SAAS,GAAImB,MAAOmE,IAC3CrF,GAAG,mBAAmB,SAACC,GACtB,EAAKlB,MAAMmB,eAAeD,MAE3BD,GAAG,gBAAgB,SAACG,EAAKC,GACd,GAAPD,GACD,EAAKpB,MAAMsB,QAAQD,EAAQE,oBAVxB,OAaT,EAAKvB,MAAMyG,aAAa,EAAKzG,MAAMwG,SAb1B,gDAgBT7I,QAAQC,IAAI+G,GAAgB,EAAD,KAhBlB,yDA9BX,EAAKuB,aAAe,EAAKA,aAAaQ,KAAlB,gBACpB,EAAKL,WAAa,EAAKA,WAAWK,KAAhB,gBAHF,EADpB,4EAoBI,QAAUjF,KAAKxD,MAAMmD,KAAOK,KAAKzB,MAAMsF,MAAMM,kBAAkBnE,KAAKxD,MAAM6H,cAAgBrE,KAAKxD,MAAMmD,MApBzG,qCAuBiBhC,GACb,IAAIuH,EACJ,IACEA,EAAIlF,KAAKzB,MAAMxC,KAAKyC,MAAM2G,QAAQxH,EAAIyH,YAAc,OACpD,MAAM5E,GACN0E,EAAI,UAEN,OAAOA,IA9BX,+BAqDY,IAAD,OAEP,OACE,oCACA,kBAACG,EAAA,EAAD,KACE,kBAACpF,EAAA,EAAD,CACEE,MAAM,WACNY,OAAO,SACPC,KAAK,iBACLS,UAAU,EACV0B,MAAOW,KAAKC,OAAmC,IAA1B/D,KAAKzB,MAAMsF,MAAM5G,SACtCyD,MAAO,IAAIoD,KAA+B,IAA1B9D,KAAKzB,MAAMsF,MAAM5G,UAAeqI,cAAcxC,OAAO,EAAE,MACzE,kBAACyC,EAAA,EAAD,CACE7E,MAAOV,KAAKxD,MAAM6H,YAClBK,KAAK,cACLnE,SAAUP,KAAKyE,cAEhBzE,KAAKzB,MAAMsF,MAAMM,kBAAkBqB,KAAI,SAAChF,EAAGyB,GAAJ,OAEtC,kBAACtB,EAAA,EAAD,CACEwB,IAAKF,EACLvB,MAAOuB,EACPrB,QAAS,kBAAC6E,EAAA,EAAD,MACTtF,MAAO,SAAS8B,EAAE,GAAG,aAAa,EAAK1D,MAAMxC,KAAKyC,MAAM2G,QAAQ,EAAK5G,MAAMsF,MAAMW,aAAavC,IACtF,qBAAqB,EAAK1D,MAAMsF,MAAMM,kBAAkBlC,QAIpE,6BAAK,kBAAChC,EAAA,EAAD,CACHe,KAAK,SACL0D,KAAK,MACLvE,MAAM,oBACNG,UAAU,EACVD,QAAQ,WACRoB,UAAWzB,KAAKzB,MAAMsF,MAAMlH,aAAemH,KAAKC,OAAmC,IAA1B/D,KAAKzB,MAAMsF,MAAM5G,SAC1EmD,YAAcJ,KAAKzB,MAAMsF,MAAMlH,aAAemH,KAAKC,OAAmC,IAA1B/D,KAAKzB,MAAMsF,MAAM5G,SAAiB,iCAAmC,GACjIiE,WAAY,CAACrD,IAAK,IAAKsD,IAAInB,KAAKzB,MAAMsF,MAAMM,kBAAkBnE,KAAKxD,MAAM6H,aAAcjD,KAAM,KAC7FH,aAAc,EACdV,SAAUP,KAAKyE,gBAlCnB,UAqCUzE,KAAKxD,MAAM8H,MACnB,kBAAC9C,EAAA,EAAD,CACEnB,QAAQ,YACRoB,UAAWzB,KAAKxD,MAAMqC,eAAiBmB,KAAKzB,MAAMsF,MAAMlH,aAAemH,KAAKC,OAAmC,IAA1B/D,KAAKzB,MAAMsF,MAAM5G,SACtGyE,QAAS1B,KAAK4E,YAHhB,sBA/FR,GAA+BpC,aCvCVkD,G,iLAET,IAAD,OACP,OACE,6BACG1F,KAAKzB,MAAM+D,WAAWkD,KAAI,SAAAhF,GAAC,OAC1B,kBAAC,GAAD,eACE2B,IAAK3B,EACLuE,QAASvE,EACTqD,MAAO,EAAKtF,MAAMoH,OAAOC,IAAIpF,IACzB,EAAKjC,gB,GAVkBiE,aCFlBqD,G,iLAGjB,OACE,6BACE,6CACA,kBAAC,GAAc7F,KAAKzB,Y,GANciE,a,oBCIrBsD,G,2MACnBtJ,MAAQ,CAACuJ,SAAU,M,EAEnBC,kB,sBAAoB,sBAAAnK,EAAA,sDAElB,EAAKoK,eAFa,2C,EAKpBA,a,sBAAe,sBAAApK,EAAA,6EAEL,EAAK0C,MAAMS,SAASC,QAAQiH,YAAY,EAAK3H,MAAMwG,QAAS,EAAKxG,MAAMgB,SAAS,IAAI4G,OAF/E,yBACEC,QADF,WACRtI,SADQ,2D,EA2CfuI,e,sBAAiB,4BAAAxK,EAAA,6DACXyK,GAAS,EADE,SAET,EAAK/H,MAAMS,SAASC,QAAQoH,eAAe,EAAK9H,MAAMwG,SAASwB,YAAY,CAACjH,KAAM,EAAKf,MAAMgB,SAAS,KAC3GiH,MAAK,SAASC,GACbH,GAAS,KAEVI,OAAM,SAASvD,GACdjH,QAAQC,IAAIgH,MAPC,UAUVmD,EAVU,gCAWP,EAAK/H,MAAMS,SAASC,QAAQoH,eAAe,EAAK9H,MAAMwG,SAAS1F,KAAK,CAACC,KAAM,EAAKf,MAAMgB,SAAS,KAClGC,GAAG,mBAAmB,SAACC,GACtB,EAAKlB,MAAMmB,eAAeD,MAE3BD,GAAG,gBAAgB,SAACG,EAAKC,GACd,GAAPD,GACD,EAAKpB,MAAMsB,QAAQD,EAAQE,oBAjBpB,OAoBb,EAAKmG,eACL,EAAK1H,MAAMyG,aAAa,EAAKzG,MAAMwG,SArBtB,2C,wEAtCP,IAAD,OACP,OACE,kBAACxB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAuBC,WAAY,kBAAC,KAAD,OAC7BzD,KAAKzB,MAAMsF,MAAOpB,GAAczC,KAAKzB,MAAMsF,MAAMjF,OAAO,aAE9D,kBAACqF,EAAA,EAAD,KACE,kBAACoB,EAAA,EAAD,KAEMrF,KAAKxD,MAAM4J,QAAWpG,KAAK2G,eAAiB,YAChD,kBAAC1G,EAAA,EAAD,CACEE,MAAM,WACNY,OAAO,SACPC,KAAK,iBACLS,UAAU,EACV0B,MAAOW,KAAKC,OAAmC,IAA1B/D,KAAKzB,MAAMsF,MAAM5G,SACtCyD,MAAO,IAAIoD,KAA+B,IAA1B9D,KAAKzB,MAAMsF,MAAM5G,UAAeqI,cAAcxC,OAAO,EAAE,MACzE,kBAACtB,EAAA,EAAD,CACEoC,MAAM,YACNvD,QAAQ,YACRoB,SAAUzB,KAAK4G,qBACflF,QAAS,WAAQ,EAAK2E,mBACnBrG,KAAK4G,qBAA8C,4BAAvB,2B,2CAQzC,OAAU5G,KAAKxD,MAAM4J,WACjBpG,KAAKzB,MAAMsF,MAAMjH,iBACfoD,KAAKzB,MAAMsF,MAAMlH,aACjBqD,KAAKxD,MAAM4J,QAAQ/D,OAAS,GAC5ByB,KAAKC,MAAkC,IAA1B/D,KAAKzB,MAAMsF,MAAM5G,Y,qCA+BpC,OAAI+C,KAAKxD,MAAM4J,QAAQ/D,OAAS,EAE5B,kBAACwE,GAAA,EAAD,CAAMC,OAAO,GACV9G,KAAKxD,MAAM4J,QAAQZ,KAAI,SAAChF,EAAGyB,GACzB,GAAGzB,EAAI,EACN,OAAO,kBAACuG,GAAA,EAAD,CAAU5E,IAAKF,GAAf,mBAAmCA,EAAE,EAArC,KAA0CzB,OAOvD,sD,GA1FgCgC,aCDnBwE,G,2MAEnBxK,MAAQ,CAACyK,cAAe,M,EAExBjB,kB,sBAAoB,4BAAAnK,EAAA,+EAGU,EAAK0C,MAAMS,SAASC,QAAQiI,oBAAoBf,KAAK,CAAC7G,KAAM,EAAKf,MAAMgB,SAAS,KAH1F,OAGZ0H,EAHY,OAIhB,EAAKnJ,SAAS,CAACmJ,cAAeA,IAJd,gDAMhB/K,QAAQC,IAAI+G,GAAgB,EAAD,KANX,yD,wEAUV,IAAD,OACP,OACE,6BACMlD,KAAKxD,MAAMyK,cAAiBjH,KAAKxD,MAAMyK,cAAczB,KAAI,SAAChF,EAAGyB,GAC9D,OAAI,EAAK1D,MAAMoH,OAAOwB,IAAI3G,GAClB,kBAAC,GAAD,CACL2B,IAAKF,EACL1C,SAAU,EAAKhB,MAAMgB,SACrBP,SAAU,EAAKT,MAAMS,SACrB+F,QAASvE,EACTwE,aAAc,EAAKzG,MAAMyG,aACzBtF,eAAgB,EAAKnB,MAAMmB,eAC3BG,QAAS,EAAKtB,MAAMsB,QACpBgE,MAAO,EAAKtF,MAAMoH,OAAOC,IAAIpF,KAClB,uBAEf,2B,GA9B6BgC,a,kDCGlB4E,G,YAEnB,aAAe,IAAD,8BACZ,+CAiIFC,0BAlIc,sBAkIc,sBAAAxL,EAAA,sEACpB,EAAKiC,SAAS,CAACwJ,mBAAmB,IADd,WAEvB,EAAK9K,MAAM+K,cAFY,gCAGlB,EAAKhJ,MAAMiJ,aAAa,EAAKjJ,MAAMwG,SAHjB,2CAlId,EAyIdyC,aAzIc,sBAyIC,sBAAA3L,EAAA,+EAEL,EAAK0C,MAAMS,SAASC,QAAQuI,aAAa,EAAKjJ,MAAMwG,SAAS1F,KAAK,CAACC,KAAM,EAAKf,MAAMgB,SAAS,KAChGC,GAAG,mBAAmB,SAACC,GACtB,EAAKlB,MAAMmB,eAAeD,MAE3BD,GAAG,gBAAgB,SAACG,EAAKC,GACd,GAAPD,GACD,EAAKpB,MAAMsB,QAAQD,EAAQE,oBARtB,uBAWL,EAAKhC,SAAS,CAClByJ,eAAe,EACfE,mBAAoB,gBACpBC,qBAAsB,wCAdb,wEAgBL,EAAK5J,SAAS,CAClB2J,mBAAoB,wBACpBC,qBAAsB,iDAAmDxE,GAAgB,EAAD,MAlB/E,yDAzID,EAoKdyE,mBApKc,uCAoKO,WAAOC,GAAP,SAAA/L,EAAA,mEAEb+L,EAFa,gCAGT,EAAKrJ,MAAMS,SAASC,QAAQ4I,UAAU,EAAKtJ,MAAMwG,SAAS1F,KAAK,CAACC,KAAM,EAAKf,MAAMgB,SAAS,KAC/FC,GAAG,mBAAmB,SAACC,GACtB,EAAKlB,MAAMmB,eAAeD,MAE3BD,GAAG,gBAAgB,SAACG,EAAKC,GACd,GAAPD,GACD,EAAKpB,MAAMsB,QAAQD,EAAQE,oBAThB,6CAaT,EAAKvB,MAAMS,SAASC,QAAQ6I,cAAc,EAAKvJ,MAAMwG,SAAS1F,KAAK,CAACC,KAAM,EAAKf,MAAMgB,SAAS,KACnGC,GAAG,mBAAmB,SAACC,GACtB,EAAKlB,MAAMmB,eAAeD,MAE3BD,GAAG,gBAAgB,SAACG,EAAKC,GACd,GAAPD,GACD,EAAKpB,MAAMsB,QAAQD,EAAQE,oBAnBhB,OAuBjB,EAAKvB,MAAMyG,aAAa,EAAKzG,MAAMwG,SAvBlB,kDA0BjB7I,QAAQC,IAAI,cAAgB,KAAM4D,SA1BjB,0DApKP,wDAkMdgI,WAlMc,sBAkMD,sBAAAlM,EAAA,yDACN,EAAKW,MAAMuL,WADL,iDAGqB,EAAKxJ,MAAMS,SAASC,QAAQ8I,WACtD,EAAKxJ,MAAMwG,SACToB,KAAK,CAAC7G,KAAM,EAAKf,MAAMgB,SAAS,KAL7B,yBAGQyI,MAHR,WAGFlK,SAHE,gBAMP,EAAKA,SAAS,CAACiK,YAAY,IANpB,kDAQP7L,QAAQC,IAAI,cAAgB,KAAM4D,SAR3B,gCAWT,EAAKjC,SAAS,CAACiK,YAAY,IAXlB,0DAlMC,EAiNdE,eAjNc,sBAiNG,sBAAApM,EAAA,+EAGP,EAAK0C,MAAMS,SAASC,QAAQgJ,eAAe,EAAK1J,MAAMwG,SACzD1F,KAAK,CAACC,KAAM,EAAKf,MAAMgB,SAAS,KAChCC,GAAG,mBAAmB,SAACC,GACtB,EAAKlB,MAAMmB,eAAeD,MAE3BD,GAAG,gBAAgB,SAACG,EAAKC,GACd,GAAPD,GACD,EAAKpB,MAAMsB,QAAQD,EAAQE,oBAVpB,8BAee,EAAKvB,MAAMS,SAASC,QAAQ8I,WACtD,EAAKxJ,MAAMwG,SACToB,KAAK,CAAC7G,KAAM,EAAKf,MAAMgB,SAAS,KAjBvB,yBAeEyI,MAfF,WAeRlK,SAfQ,kEAmBb5B,QAAQC,IAAI,cAAgB,KAAM4D,SAnBrB,0DAjNH,EAwOdmI,kBAxOc,sBAwOM,sBAAArM,EAAA,sFAEoB,EAAK0C,MAAMS,SAASC,QAAQkJ,cAC9D,EAAK5J,MAAMwG,SACToB,KAAK,CAAC7G,KAAM,EAAKf,MAAMgB,SAAS,KAJpB,yBAED6I,cAFC,WAEXtK,SAFW,gEAMhB5B,QAAQC,IAAI,cAAgB,KAAM4D,SANlB,yDAtOlB,EAAKvD,MAAQ,CACX4L,cAAe,GACfL,YAAY,EACZC,MAAO,EACPV,mBAAmB,EACnBG,mBAAoB,KACpBC,qBAAsB,KACtBH,eAAe,GATL,E,sEAYJ,IAAD,OACP,OAAKvH,KAAKzB,MAAMsF,MAKd,6BAAK,kBAACN,EAAA,EAAD,KACH,kBAACC,EAAA,EAAD,CAAuBC,WAAY,kBAAC,KAAD,OAC7BzD,KAAKzB,MAAMsF,MAAOpB,GAAczC,KAAKzB,MAAMsF,MAAMjF,OAAO,aAE9D,kBAACqF,EAAA,EAAD,KACE,kBAACoB,EAAA,EAAD,KACE,kBAACgD,GAAA,EAAD,CACEC,OAAQ,kBAACC,GAAA,EAAD,UACRpI,MAAM,cACNyD,MAAO5D,KAAKwI,UAAUxI,KAAKzB,MAAMsF,MAAMlH,aACvC8L,WAAS,EACT/G,QAAS,kBAAM,EAAKiG,mBAAmB,EAAKpJ,MAAMsF,MAAMlH,cACxD0D,QAAQ,aACV,kBAACgI,GAAA,EAAD,CACEC,OAAQ,kBAACC,GAAA,EAAD,UACRpI,MAAM,iBACNyD,MAAO5D,KAAKwI,UAAUxI,KAAKzB,MAAMsF,MAAMjH,gBACvCyD,QAAQ,aACV,kBAACJ,EAAA,EAAD,CACEE,MAAM,WACNY,OAAO,SACPC,KAAK,iBACLS,UAAU,EACV0B,MAAOW,KAAKC,OAAmC,IAA1B/D,KAAKzB,MAAMsF,MAAM5G,SACtCyD,MAAO,IAAIoD,KAA+B,IAA1B9D,KAAKzB,MAAMsF,MAAM5G,UAAeqI,cAAcxC,OAAO,EAAE,MAGzE,6BAEA,kBAAC+D,GAAA,EAAD,CAAMC,OAAO,GACV9G,KAAKzB,MAAMsF,MAAMM,kBAAkBqB,KAAI,SAAChF,EAAEyB,GAAH,OACtC,kBAAC8E,GAAA,EAAD,CAAU5E,IAAKF,GAAf,eACeA,EAAE,EADjB,wBAEG,EAAK1D,MAAMsF,MAAMM,kBAAkBlC,GAFtC,mBAGG,EAAK1D,MAAMxC,KAAKyC,MAAM2G,QAAQ,EAAK5G,MAAMsF,MAAMW,aAAavC,IAH/D,YAOJ,6BAEA,kBAACoG,GAAA,EAAD,CACElI,MAAO,gBAAkBH,KAAKxD,MAAMuL,WAAa/H,KAAKzB,MAAMxC,KAAKyC,MAAM2G,QAAQnF,KAAKxD,MAAMwL,OAAS,OAAU,OAC7G3H,QAAQ,WACRoI,WAAS,EACT/G,QAAS,kBAAM,EAAKqG,gBAvCxB,IAuCyC,6BAEvC,6BAAK,kBAACvG,EAAA,EAAD,CACHnB,QAAQ,YACRuD,MAAM,UACNnC,SAAWqC,KAAKC,MAAkC,IAA1B/D,KAAKzB,MAAMsF,MAAM5G,UAAkB+C,KAAKxD,MAAMwL,OAAS,EAC/EtG,QAAS,WAAQ,EAAKuG,mBAJnB,mBAK2B,6BAEhC,kBAAC,GAAD,iBACMjI,KAAKzB,MADX,CAEE6H,QAASpG,KAAKzB,MAAMsF,MAAMM,qBAE5B,kBAAC,GAAD,iBACMnE,KAAKzB,MADX,CAEEmK,OAAQ1I,KAAKzB,MAAMsF,MAAMW,gBAC3B,6BAEA,6BAAK,kBAAChD,EAAA,EAAD,CACHnB,QAAQ,YACRuD,MAAM,UACNlC,QAAS,WAAQ,EAAKwG,sBAHnB,uBAML,kBAACrB,GAAA,EAAD,CAAMC,OAAO,GACV9G,KAAKxD,MAAM4L,cAAc5C,KAAI,SAAChF,EAAGyB,GAAJ,OAC5B,kBAAC8E,GAAA,EAAD,CAAU5E,IAAKF,GACZzB,OAKP,6BAAK,kBAACgB,EAAA,EAAD,CACHnB,QAAQ,YACRuD,MAAM,YACNnC,SAAWqC,KAAKC,MAA2C,KAAlC/D,KAAKzB,MAAMsF,MAAM5G,SAAS,SAAiB+C,KAAKxD,MAAMwL,MAAQ,EACvFtG,QAAS,kBAAM,EAAK5D,SAAS,CAC3B2J,mBAAoB,eACpBH,mBAAmB,EACnBI,qBAAsB,mDAPrB,oBAcX,kBAAC/F,EAAA,EAAD,CACEC,KAAM5B,KAAKxD,MAAM8K,kBACjBzF,QAAS7B,KAAKqH,2BAEd,kBAACvF,EAAA,EAAD,KAAc9B,KAAKxD,MAAMiL,oBACzB,kBAAC1F,EAAA,EAAD,KACG/B,KAAKxD,MAAMkL,sBAEd,kBAAC1F,EAAA,EAAD,KACE,kBAACR,EAAA,EAAD,CACEoC,MAAM,YACNnC,SAAWqC,KAAKC,MAA+C,IAAtC/D,KAAKzB,MAAMsF,MAAM5G,UAA8B+C,KAAKxD,MAAMwL,MAAQ,GAAKhI,KAAKxD,MAAM+K,cAC3G7F,QAAS,kBAAM,EAAK8F,iBAHtB,gBAKA,kBAAChG,EAAA,EAAD,CAAQE,QAAS1B,KAAKqH,2BAAtB,YA5GG,uD,gCAiJDO,GACR,OAAIA,EAAkB,UACV,gB,GAnKwBpF,aAqP3BmG,GAAb,2MACEC,WAAa,IAAI5K,MAAM,EAAKO,MAAM6H,QAAQ/D,QAAQwG,KAAK,KADzD,EAoCE9J,OApCF,sBAoCW,sBAAAlD,EAAA,+EAEC,EAAK0C,MAAMS,SAASC,QAAQ6J,YAChC,EAAKvK,MAAMwG,QACX,EAAK6D,YACHvJ,KAAK,CAACC,KAAM,EAAKf,MAAMgB,SAAS,KACjCC,GAAG,mBAAmB,SAACC,GACtB,EAAKlB,MAAMmB,eAAeD,MAE3BD,GAAG,gBAAgB,SAACG,EAAKC,GACd,GAAPD,GACD,EAAKpB,MAAMsB,QAAQD,EAAQE,oBAX5B,OAcL,EAAKvB,MAAMyG,aAAa,EAAKzG,MAAMwG,SAd9B,+CAiBL7I,QAAQC,IAAI,cAAgB,KAAM4D,SAjB7B,wDApCX,wEAGY,IAAD,OACP,OACE,kBAACwD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAuBC,WAAY,kBAAC,KAAD,OAAnC,eAGA,kBAACQ,EAAA,EAAD,KACE,kBAACoB,EAAA,EAAD,KACGrF,KAAKzB,MAAM6H,QAAQZ,KAAI,SAAChF,EAAGyB,GAAJ,OACtB,kBAAChC,EAAA,EAAD,CACEkC,IAAKF,EACL/B,GAAI,iBAAmB+B,EACvB9B,MAAM,iBACNE,QAAQ,WACRU,OAAO,SACPT,UAAU,EACVU,KAAK,SACLC,aAAa,IACbV,SAAU,SAAAC,GAAC,OAAI,EAAKoI,WAAW3G,GAAKzB,EAAEC,OAAOC,OAC7CQ,WAAY,CAAErD,IAAK,IAAKuD,KAAM,KAC9BhB,WAAY,gBAAkB6B,EAAE,QAEpC,kBAACT,EAAA,EAAD,CACEnB,QAAQ,YACRuD,MAAM,UACNlC,QAAS,WAAQ,EAAK3C,WAHxB,cAzBZ,GAAgCyD,aA0DnBuG,GAAb,2MACEvM,MAAQ,CAACwM,WAAY,EAAGC,SAAU,EAAK1K,MAAMmK,OAAO,GAAI7J,cAAc,GADxE,EAqDEE,OArDF,sBAqDW,sBAAAlD,EAAA,+EAEC,EAAK0C,MAAMS,SAASC,QAAQiK,oBAChC,EAAK3K,MAAMwG,QACX,EAAKvI,MAAMwM,WACX,EAAKxM,MAAMyM,UACT5J,KAAK,CAACC,KAAM,EAAKf,MAAMgB,SAAS,KACjCC,GAAG,mBAAmB,SAACC,GACtB,EAAKlB,MAAMmB,eAAeD,MAE3BD,GAAG,gBAAgB,SAACG,EAAKC,GACd,GAAPD,GACD,EAAKpB,MAAMsB,QAAQD,EAAQE,oBAZ5B,OAeL,EAAKvB,MAAMyG,aAAa,EAAKzG,MAAMwG,SAf9B,+CAkBL7I,QAAQC,IAAI,cAAgB,KAAM4D,SAlB7B,wDArDX,wEAGY,IAAD,OACP,OACE,kBAACwD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAuBC,WAAY,kBAAC,KAAD,OAAnC,iBAGA,kBAACQ,EAAA,EAAD,KACE,kBAACoB,EAAA,EAAD,KACE,kBAAC8D,GAAA,EAAD,8BACA,kBAACC,GAAA,EAAD,CACEC,QAAQ,wBACR3I,MAAOV,KAAKxD,MAAMwM,WAClBzI,SAAU,SAAAC,GAAC,OAAI,EAAK1C,SAAS,CAACkL,WAAYxI,EAAEC,OAAOC,UAElDV,KAAKzB,MAAMmK,OAAOlD,KAAI,SAAChF,EAAGyB,GAAJ,OACrB,kBAACqH,GAAA,EAAD,CAAUnH,IAAKF,EAAGvB,MAAOuB,GAAIA,EAAE,OAInC,kBAAChC,EAAA,EAAD,CACIC,GAAI,YACJC,MAAM,kBACNE,QAAQ,WACRU,OAAO,SACPT,UAAU,EACVU,KAAK,SACLC,aAAcjB,KAAKzB,MAAMmK,OAAO1I,KAAKxD,MAAMwM,YAC3CzI,SAAU,SAAAC,GACNA,EAAEC,OAAOC,MAAQ,EAAK5C,SAAS,CAACmL,SAAU,EAAK1K,MAAMxC,KAAKyC,MAAM4D,MAAM5B,EAAEC,OAAOC,SAC/E,EAAK5C,SAAS,CAACmL,SAAU,OAC3B,EAAKM,YAAY/I,EAAEC,OAAOC,QAE5BQ,WAAY,CAAErD,IAAK,WAAYuD,KAAM,cAEzC,kBAACI,EAAA,EAAD,CACEnB,QAAQ,YACRqB,QAAS,WAAQ,EAAK3C,UACtB0C,SAAUzB,KAAKxD,MAAMqC,cAHvB,qBArCZ,kCAgDc2K,GACV,IAAIC,GAAMD,GAASA,EAAQ,KAC3BxJ,KAAKlC,SAAS,CAACe,aAAc4K,QAlDjC,GAAkCjH,aCpTbkH,G,YAEnB,aAAe,IAAD,8BACZ,+CAFFC,aAAe,GACD,EAKd3D,kBALc,sBAKM,sBAAAnK,EAAA,sDAElB,EAAK0C,MAAM+D,WAAWkD,IAAtB,uCAA0B,WAAOT,GAAP,SAAAlJ,EAAA,sDACZ,EAAK0C,MAAMoH,OAAOC,IAAIb,GACxB6E,QAAU,EAAKrL,MAAMgB,SAAS,IACtC,EAAKoK,aAAaE,KAAK9E,GAHD,2CAA1B,kCAAA/E,KAAA,gBAOA,EAAKlC,SAAS,CAAC6L,aAAc,EAAKA,eAThB,2CAHlB,EAAKnN,MAAQ,CAACmN,aAAc,IAFhB,E,sEAiBJ,IAAD,OACP,OACE,6BACG3J,KAAKxD,MAAMmN,aAAanE,KAAI,SAAChF,EAAGyB,GAAJ,OAC3B,kBAAC,GAAD,CACEE,IAAKF,EACL1C,SAAU,EAAKhB,MAAMgB,SACrBP,SAAU,EAAKT,MAAMS,SACrB+F,QAASvE,EACTqD,MAAO,EAAKtF,MAAMoH,OAAOC,IAAIpF,GAC7BwE,aAAc,EAAKzG,MAAMyG,aACzBwC,aAAc,EAAKjJ,MAAMiJ,aACzB9H,eAAgB,EAAKnB,MAAMmB,eAC3BG,QAAS,EAAKtB,MAAMsB,QACpB9D,KAAM,EAAKwC,MAAMxC,e,GAjCSyG,a,yQCWtC,IAAMsH,GAAgBC,YAAOvI,IAAPuI,CAAH,KAGKC,IAAO,MAIzBC,GAAkBF,YAAOvI,IAAPuI,CAAH,KAECG,IAAM,MAI5B,SAASC,GAAS5L,GAAQ,IAChB6L,EAAqC7L,EAArC6L,SAAU1J,EAA2BnC,EAA3BmC,MAAO2J,EAAoB9L,EAApB8L,MAAUC,EADZ,YACsB/L,EADtB,8BAGvB,OACE,kBAACmF,EAAA,EAAD,eACE6G,UAAU,MACVC,KAAK,WACLC,OAAQ/J,IAAU2J,EAClBnK,GAAE,uBAAkBmK,GACpBK,kBAAA,kBAA4BL,IACxBC,GAEH5J,IAAU2J,GAAS,kBAACM,EAAA,EAAD,CAAKC,EAAG,GAAIR,IAWtC,SAASS,GAASR,GAChB,MAAO,CACLnK,GAAG,WAAD,OAAamK,GACf,gBAAgB,gBAAhB,OAAiCA,IAIrC,SAASS,KACP,OACE,6BACE,kBAACC,EAAA,EAAD,CAAWnJ,MAAM,GACf,kBAACyD,EAAA,EAAD,KACE,kBAAC2F,EAAA,EAAD,CAAkBpH,MAAM,YAD1B,8B,IAoMOqH,G,2MA1LbzO,MAAQ,CAAET,KAAM,KAAMwD,SAAU,KAAMP,SAAU,KAAMkM,UAAW,EAAGC,QAAS,GAAIC,UAAW,I,EAE5FpF,kB,sBAAoB,oCAAAnK,EAAA,+EAGGN,IAHH,cAGVQ,EAHU,gBAMOA,EAAKsP,IAAIC,cANhB,cAMV/L,EANU,gBASQxD,EAAKsP,IAAIE,IAAIC,QATrB,cASVC,EATU,OAUVC,EAAkBC,EAAcC,SAASH,IACzCI,EAAW,IAAI9P,EAAKsP,IAAIS,SAC5BH,EAAcI,IACdL,EAAgBM,UAGTC,QAAQC,cAAe,EAGhC,EAAKpO,SAAS,CAAE/B,OAAMwD,WAAUP,SAAU6M,IAnB1B,UAsBV,EAAKM,kBAtBK,yBAyBV,EAAKC,cAzBK,QA4BhBP,EAASlG,OAAO0G,aAAhB,uCAA6B,WAAOC,EAAKC,GAAZ,SAAA1Q,EAAA,yDACvByQ,EADuB,gCAEnB,EAAKtH,aAAauH,EAAIC,aAAaC,UAFhB,uBAGnB,EAAKN,kBAHc,2CAA7B,yDA5BgB,kDAqChBO,MAAM,0EAGNxQ,QAAQiH,MAAR,MAxCgB,0D,EA4CpBgJ,gB,sBAAkB,4BAAAtQ,EAAA,sEACO,EAAKW,MAAMwC,SAASC,QAAQ0N,aAAaxG,OADhD,OACZ7D,EADY,OAEhB,EAAKxE,SAAS,CAACwE,WAAYA,IAFX,2C,EAKlB8J,Y,sBAAc,4BAAAvQ,EAAA,6DACR8J,EAAS,IAAIiH,IADL,SAENpR,QAAQqR,IAAI,EAAKrQ,MAAM8F,WAAWkD,IAAtB,uCAA0B,WAAO3B,GAAP,SAAAhI,EAAA,kEAC1C8J,EAD0C,KAC/B9B,EAD+B,SAClB,EAAKrH,MAAMwC,SAASC,QAAQ6N,eAAejJ,GAAOsC,OADhC,wBACnC4G,IADmC,gEAA1B,kCAAA/M,KAAA,iBAFN,OAKZ,EAAKlC,SAAS,CAAE6H,OAAQA,IALZ,2C,EAQdX,a,uCAAe,WAAOyH,GAAP,eAAA5Q,EAAA,sEACa,EAAKW,MAAMwC,SAASC,QAAQ6N,eAAeL,GAAUtG,OADlE,OACT6G,EADS,OAEb,EAAKlP,UAAS,SAACoE,GAEb,MAAO,CAAEyD,OADW,IAAIiH,IAAI1K,EAAUyD,QACPoH,IAAIN,EAAUO,OAJlC,2C,wDAQfxF,a,uCAAe,WAAOiF,GAAP,SAAA5Q,EAAA,sEACP,EAAKsQ,kBADE,OAEb,EAAKrO,UAAS,SAACoE,GACb,IAAI+K,EAAgB,IAAIL,IAAI1K,EAAUyD,QAEtC,OADAsH,EAAcC,OAAOT,GACd,CAAE9G,OAAQsH,MALN,2C,wDASfE,UAAY,SAACtJ,EAAOnD,GAClB,EAAK5C,SAAS,CAAEoN,UAAWxK,K,EAG7Bb,Q,uCAAU,WAAOJ,GAAP,eAAA5D,EAAA,uDACJsP,EAAU,EAAK3O,MAAM2O,SACjBiC,OAAOjC,EAAQkC,QAAQ5N,GAAK,GACpC,EAAK3B,SAAS,CAAEqN,QAASA,IACzB,EAAKrN,SAAS,CAAEsN,UAAU,GAAD,mBAAM,EAAK5O,MAAM4O,WAAjB,CAA4B3L,MAJ7C,2C,wDAOVC,e,uCAAiB,WAAOQ,GAAP,SAAArE,EAAA,sDACf,EAAKiC,SAAS,CAAEqN,QAAQ,GAAD,mBAAM,EAAK3O,MAAM2O,SAAjB,CAA2BjL,MADnC,2C,8HAIP,IAAD,OAEP,OAAKF,KAAKxD,MAAMT,MAASiE,KAAKxD,MAAMmJ,OAMlC,yBAAKhC,UAAU,OACb,kBAAC2J,EAAA,EAAD,CAAQC,SAAS,UACdvN,KAAKxD,MAAM2O,QAAQ3F,KAAI,SAAC/F,GACvB,IAAI+N,EAAQ/N,EAAGgO,UAAU,EAAE,IAAM,MACjC,OACE,kBAAC3D,GAAD,CACEzJ,QAAQ,aADV,uBAEsBmN,EAFtB,kBAKHxN,KAAKxD,MAAM4O,UAAU5F,KAAI,SAAC/F,GACzB,IAAI+N,EAAQ/N,EAAGgO,UAAU,EAAE,IAAM,MACjC,OACE,kBAACxD,GAAD,CACE5J,QAAQ,YACRqB,QAAS,WACP,IAAIgM,EAAO,EAAKlR,MAAM4O,UACtBsC,EAAKN,OAAOM,EAAKL,QAAQ5N,GAAK,GAC9B,EAAK3B,SAAS,CAAEsN,UAAWsC,MAL/B,uBAOsBF,EAPtB,6CAUJ,kBAACG,EAAA,EAAD,CACEjN,MAAOV,KAAKxD,MAAM0O,UAClB0C,eAAe,UACfC,UAAU,UACVC,UAAU,EACVvN,SAAUP,KAAKmN,UACfY,aAAW,uBAEX,kBAACC,EAAA,EAAD,eAAK7N,MAAM,iBAAoB0K,GAAS,KACxC,kBAACmD,EAAA,EAAD,eAAK7N,MAAM,cAAiB0K,GAAS,KACrC,kBAACmD,EAAA,EAAD,eAAK7N,MAAM,aAAgB0K,GAAS,KACpC,kBAACmD,EAAA,EAAD,eAAK7N,MAAM,gBAAmB0K,GAAS,OAG3C,kBAACV,GAAD,CAAUzJ,MAAOV,KAAKxD,MAAM0O,UAAWb,MAAO,GAC5C,kBAAC,GAAD,CACErL,SAAUgB,KAAKxD,MAAMwC,SACrBO,SAAUS,KAAKxD,MAAM+C,SACrB+C,WAAYtC,KAAKxD,MAAM8F,WACvBqD,OAAQ3F,KAAKxD,MAAMmJ,OACnBX,aAAchF,KAAKgF,aACnBnF,QAASG,KAAKH,QACdH,eAAgBM,KAAKN,eACrB3D,KAAMiE,KAAKxD,MAAMT,QAGrB,kBAACoO,GAAD,CAAUzJ,MAAOV,KAAKxD,MAAM0O,UAAWb,MAAO,GAC1C,kBAAC,GAAD,CACE9K,SAAUS,KAAKxD,MAAM+C,SACrBP,SAAUgB,KAAKxD,MAAMwC,SACrBgG,aAAchF,KAAKgF,aACnBnF,QAASG,KAAKH,QACdH,eAAgBM,KAAKN,eACrBiG,OAAQ3F,KAAKxD,MAAMmJ,UAGzB,kBAACwE,GAAD,CAAUzJ,MAAOV,KAAKxD,MAAM0O,UAAWb,MAAO,GAC1C,kBAAC,GAAD,CACE9K,SAAUS,KAAKxD,MAAM+C,SACrBP,SAAUgB,KAAKxD,MAAMwC,SACrBsD,WAAYtC,KAAKxD,MAAM8F,WACvBqD,OAAQ3F,KAAKxD,MAAMmJ,OACnBX,aAAchF,KAAKgF,aACnBwC,aAAcxH,KAAKwH,aACnB3H,QAASG,KAAKH,QACdH,eAAgBM,KAAKN,eACrB3D,KAAMiE,KAAKxD,MAAMT,QAGvB,kBAACoO,GAAD,CAAUzJ,MAAOV,KAAKxD,MAAM0O,UAAWb,MAAO,GAC1C,kBAAC,EAAD,CACE/H,WAAYtC,KAAKxD,MAAM8F,WACvBvG,KAAMiE,KAAKxD,MAAMT,KACjBwD,SAAUS,KAAKxD,MAAM+C,SACrBP,SAAUgB,KAAKxD,MAAMwC,SACrBa,QAASG,KAAKH,QACdH,eAAgBM,KAAKN,mBApFtB,kBAACoL,GAAD,U,GA/FKtI,aC3DEyL,QACW,cAA7BtS,OAAOuS,SAASC,UAEe,UAA7BxS,OAAOuS,SAASC,UAEhBxS,OAAOuS,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnI,MAAK,SAAAoI,GACjCA,EAAaC,kB","file":"static/js/main.871b46da.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, TextField, FormControlLabel, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nexport default class CreateEvent extends Component {\r\n  state = {\r\n    event_ID: null, \r\n    event_title: null, \r\n    sale_active: false, \r\n    buyback_active: false, \r\n    customer_limited: false, \r\n    tickets_per_customer: 1, \r\n    ticket_types: 1, \r\n    price_table: [], \r\n    deadline: null, \r\n    button_disabled: true, \r\n    event_ID_helperText: \"\",\r\n    error_open: false,\r\n    error_title: null,\r\n    error_message: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.set_ticket_types(1);\r\n  }\r\n\r\n  tickets_avail = [];\r\n  ticket_prices = [];\r\n  event_ID_hex = \"\";\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Create a new event</h2>\r\n\r\n        <TextField \r\n          id=\"event_ID\" \r\n          label=\"Unique event ID\" \r\n          helperText={this.state.event_ID_helperText}\r\n          variant=\"outlined\" \r\n          required={true} \r\n          onChange={e => this.update_event_ID(e.target.value) } />\r\n\r\n        <TextField \r\n          id=\"event_title\" \r\n          label=\"Event title\" \r\n          variant=\"outlined\" \r\n          required={true}\r\n          onChange={e => this.update_title(e.target.value) } />\r\n\r\n        <div><FormControlLabel\r\n          control={<Switch onChange={e => this.setState({sale_active: e.target.checked})} />}\r\n          label=\"Sale active on deployment\" /></div>\r\n\r\n        <div><FormControlLabel\r\n          control={<Switch onChange={e => this.setState({buyback_active: e.target.checked})} />}\r\n          label=\"Buyback active on deployment\" /></div>\r\n\r\n        <div><FormControlLabel\r\n          control={<Switch onChange={e => this.setState({customer_limited: e.target.checked})} />}\r\n          label=\"Limit number of tickets per customer\" /></div>\r\n        \r\n        {this.tickets_per_customer()}\r\n\r\n        <div><TextField \r\n          id=\"ticket_types\" \r\n          label=\"# of ticket types\" \r\n          variant=\"outlined\" \r\n          margin=\"normal\"\r\n          required={true}\r\n          type=\"number\"\r\n          defaultValue={1}\r\n          inputProps={{ min: \"1\", max: \"15\", step: \"1\" }}\r\n          onChange={e => this.set_ticket_types(e.target.value)} /></div>\r\n\r\n        {this.state.price_table}\r\n\r\n        <div>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              id=\"deadline\"\r\n              variant=\"inline\"\r\n              format=\"yyyy-MM-dd\"\r\n              margin=\"normal\"\r\n              label=\"Choose a deadline date\"\r\n              value={this.state.deadline}\r\n              onChange={d => this.update_deadline(d)}\r\n            />\r\n\t    <KeyboardTimePicker\r\n              margin=\"normal\"\r\n              id=\"time-picker\"\r\n              label=\"Choose a deadline time\"\r\n              value={this.state.deadline}\r\n              onChange={d => this.update_deadline(d)}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n\r\n        <div><Button\r\n          id=\"createButton\"\r\n          variant=\"contained\"\r\n          disabled={this.state.button_disabled}\r\n          onClick={() => { this.submit() }}\r\n        >Create Event</Button></div>\r\n        <Dialog\r\n          open={this.state.error_open}\r\n          onClose={this.handle_close_error}\r\n        >\r\n          <DialogTitle>{this.state.error_title}</DialogTitle>\r\n          <DialogContent>\r\n            {this.state.error_message}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handle_close_error}>\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  tickets_per_customer() {\r\n    if (this.state.customer_limited) return (\r\n      <div><TextField \r\n        id=\"tickets_per_customer\" \r\n        label=\"Max. tickets / customer\" \r\n        variant=\"outlined\" \r\n        margin=\"normal\"\r\n        required={true}\r\n        type=\"number\"\r\n        defaultValue={1}\r\n        inputProps={{ min: \"1\", step: \"1\" }}\r\n        onChange={e => this.setState({tickets_per_customer: e.target.value})} /></div>\r\n    )\r\n  }\r\n\r\n  set_ticket_types = async (val) => {\r\n    val = Math.min(val,15);\r\n    await this.setState({ticket_types: val});\r\n    this.tickets_and_prices();\r\n    this.tickets_avail = new Array(val);\r\n    this.ticket_prices = new Array(val);\r\n    this.check_form();\r\n  }\r\n\r\n  open_error = async (errorMessage) => {\r\n    await this.setState(\r\n      {\r\n        error_title: \"Error when creating event\", \r\n        error_message: \"There was an error when trying to create event: \" + errorMessage,\r\n        error_open: true,\r\n      }\r\n    );\r\n  }\r\n\r\n  handle_close_error = async () => {\r\n    await this.setState({error_open: false});\r\n  }\r\n\r\n  tickets_and_prices() {\r\n    this.setState({price_table: []});\r\n    for (let i=0; i<this.state.ticket_types; i++) {\r\n      this.setState(prevState => ({ price_table: [prevState.price_table, (\r\n        <div key={i}><TextField \r\n          id={\"tickets_avail\" + i}\r\n          label=\"Nr. of tickets\"\r\n          variant=\"outlined\" \r\n          margin=\"normal\"\r\n          required={true}\r\n          type=\"number\"\r\n          inputProps={{ min: \"1\", step: \"1\" }}\r\n          onChange={e => { this.tickets_avail[i] = e.target.value; this.check_form() }}\r\n          helperText={\"Ticket type \" + (i+1)} />\r\n        <TextField \r\n          id={\"ticket_price\" + i}\r\n          label=\"Ticket price (ETH)\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required={true}\r\n          type=\"number\"\r\n          inputProps={{ min: \"0.000001\", step: \"0.000001\" }}\r\n          onChange={e => {\r\n            !!e.target.value ? this.ticket_prices[i] = this.props.web3.utils.toWei(e.target.value) : this.ticket_prices[i] = null; \r\n            this.check_form();\r\n          }}\r\n          /></div>\r\n      )]}))\r\n    }\r\n  }\r\n\r\n  update_deadline = async (val) => {\r\n    await this.setState({deadline: val});\r\n    this.check_form();\r\n  }\r\n\r\n  update_event_ID = async (val) => {\r\n    await this.setState({event_ID: val});\r\n    this.event_ID_hex = this.props.web3.utils.padRight(\r\n          this.props.web3.utils.asciiToHex(\r\n            this.state.event_ID), 64);\r\n    \r\n    this.check_form();\r\n  }\r\n\r\n  update_title = async (val) => {\r\n    await this.setState({title: val});\r\n    this.check_form();\r\n  }\r\n\r\n  check_form = async () => {\r\n    let button_state = this.check_fields();\r\n    await this.setState({button_disabled: button_state})\r\n  }\r\n\r\n  check_fields() {\r\n    if (typeof this.state.event_ID !== \"string\") return true;\r\n    if (typeof this.state.event_ID === \"string\" && this.state.event_ID.length < 1) return true;\r\n\r\n    if (this.props.event_list.includes(this.event_ID_hex)) {\r\n      this.setState({event_ID_helperText: \"Event ID is not available.\"});\r\n      return true;\r\n    } else this.setState({event_ID_helperText: \"Event ID is available.\"});\r\n      \r\n    if (typeof this.state.title !== \"string\") return true;\r\n    if (typeof this.state.title === \"string\" && this.state.title.length < 1) return true;\r\n    if (this.state.deadline == null) return true;\r\n\r\n    for (let i=0; i<this.state.ticket_types; i++) {\r\n      if (!this.tickets_avail[i] || !this.ticket_prices[i]) return true;\r\n      if (this.tickets_avail[i] < 1 || this.ticket_prices[i] < 1) return true; //avoid zero or negative ticket availability or prices\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  submit = async () => {\r\n    try {\r\n      await this.props.contract.methods.create_event(\r\n        this.props.web3.utils.asciiToHex(this.state.event_ID),\r\n        this.props.web3.utils.asciiToHex(this.state.title),\r\n        this.tickets_avail,\r\n        this.ticket_prices,\r\n        this.state.customer_limited,\r\n        this.state.tickets_per_customer,\r\n        this.state.sale_active,\r\n        this.state.buyback_active,\r\n        Math.round(this.state.deadline.getTime() / 1000)\r\n        ).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Dev error: \");\r\n      console.log(error);\r\n      await this.open_error(error.message);\r\n    }\r\n  }\r\n}\r\n","export function bytesToString(bytes){\r\n  bytes = bytes.replace('0x','');\r\n  let str = '';\r\n  for (var n = 0; n < bytes.length; n += 2) {\r\n    if(bytes.substr(n,2) == \"00\") break;\r\n    str += String.fromCharCode(parseInt(bytes.substr(n, 2), 16));\r\n  }\r\n  return str;\r\n}\r\n","export function getErrorMessage(error){\r\n  try {\r\n    let j = JSON.parse(error.message.substr(16, error.message.length-15));\r\n    return j.message;\r\n  } catch (e) {\r\n    return \"Unable to read error message.\";\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {TextField, Radio, RadioGroup, FormControl, FormControlLabel, Button } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { bytesToString } from '../util/conversion.js';\r\nimport { getErrorMessage } from '../util/EthErrorMsg.js';\r\nimport './EventList.css';\r\n\r\nexport default class EventListItem extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography className=\"heading\" \r\n            color={(this.props.event.sale_active && Date.now() < this.props.event.deadline*1000) ? \"primary\" : \"secondary\"}>\r\n            {bytesToString(this.props.event.title)}\r\n          </Typography>\r\n          <Typography className=\"secondaryHeading\">\r\n            {this.total_available_tickets()} available tickets\r\n          </Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails className=\"expansionPanelDetails\">\r\n          <BuyTicket \r\n            {...this.props}\r\n          />\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n\r\n  total_available_tickets() {\r\n    let sum = 0;\r\n    for (let i=0; i < this.props.event.available_tickets.length; i++) {\r\n      sum += parseInt(this.props.event.available_tickets[i]);\r\n    }\r\n    return sum;\r\n  }\r\n}\r\n\r\nexport class BuyTicket extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.buyTickets = this.buyTickets.bind(this);\r\n  }\r\n\r\n  state = {\r\n    ticket_type: 0, \r\n    num: 1, \r\n    button_state: this.props.event.available_tickets[0] > 0, \r\n    total: this.convert_to_eth(this.props.event.ticket_price[0])};\r\n\r\n  handleChange = async (event) => {\r\n    await this.setState({[event.target.name]: parseInt(event.target.value)});\r\n    await this.setState({total: this.convert_to_eth(this.props.event.ticket_price[this.state.ticket_type]*this.state.num)});\r\n    this.setState({button_state: this.check_choice() && this.state.total !== \"invalid\"})\r\n  }\r\n\r\n  check_choice() {\r\n    return (!!this.state.num && this.props.event.available_tickets[this.state.ticket_type] >= this.state.num);\r\n  }\r\n\r\n  convert_to_eth(val) {\r\n    let r;\r\n    try{\r\n      r = this.props.web3.utils.fromWei(val.toString()) + \" ETH\";\r\n    } catch(e) {\r\n      r = \"invalid\";\r\n    }\r\n    return r;\r\n  }\r\n\r\n  buyTickets = async () => {\r\n    try {\r\n      let total_value = this.props.event.ticket_price[this.state.ticket_type]*this.state.num;\r\n      await this.props.contract.methods.buy_tickets(this.props.eventId, this.state.ticket_type, this.state.num)\r\n        .send({from: this.props.accounts[0], value: total_value})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      this.props.reload_event(this.props.eventId); //call to App.js to reload affected event\r\n\r\n    } catch (error){\r\n      console.log(getErrorMessage(error));\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return(\r\n      <>\r\n      <FormControl>\r\n        <TextField\r\n          label=\"Deadline\"\r\n          margin=\"normal\"\r\n          type=\"datetime-local\"\r\n          disabled={true}\r\n          error={Date.now() >= this.props.event.deadline*1000}\r\n          value={new Date(this.props.event.deadline*1000).toISOString().substr(0,16)}/>\r\n        <RadioGroup \r\n          value={this.state.ticket_type}\r\n          name=\"ticket_type\"\r\n          onChange={this.handleChange}\r\n        >\r\n        {this.props.event.available_tickets.map((e, i) => \r\n\r\n          <FormControlLabel\r\n            key={i}\r\n            value={i}\r\n            control={<Radio />}\r\n            label={\"Type \"+(i+1)+\" - Price: \"+this.props.web3.utils.fromWei(this.props.event.ticket_price[i])+\r\n                    \" ETH | Available: \"+this.props.event.available_tickets[i]}\r\n          />\r\n\r\n        )}\r\n        <br/><TextField\r\n          type=\"number\"\r\n          name=\"num\"\r\n          label=\"Number of tickets\"\r\n          required={true}\r\n          variant=\"outlined\"\r\n          disabled={!this.props.event.sale_active || Date.now() >= this.props.event.deadline*1000}\r\n          helperText={(!this.props.event.sale_active || Date.now() >= this.props.event.deadline*1000) ? \"Sale is closed for this event.\" : \"\"}\r\n          inputProps={{min: \"1\", max:this.props.event.available_tickets[this.state.ticket_type], step: \"1\"}}\r\n          defaultValue={1}\r\n          onChange={this.handleChange}\r\n        />\r\n        </RadioGroup>\r\n        Total: {this.state.total}\r\n        <Button\r\n          variant=\"contained\"\r\n          disabled={!this.state.button_state || !this.props.event.sale_active || Date.now() >= this.props.event.deadline*1000}\r\n          onClick={this.buyTickets}\r\n        > Buy tickets\r\n        </Button>\r\n      </FormControl>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport EventListItem from './EventListItem.js'\r\nimport './EventList.css';\r\n\r\nexport default class EventList extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        {this.props.event_list.map(e =>\r\n          <EventListItem \r\n            key={e}\r\n            eventId={e}\r\n            event={this.props.events.get(e)}\r\n            {...this.props}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport EventList from './EventList.js';\r\n\r\nexport default class BrowseEvents extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Browse Events</h2>\r\n        <EventList {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {TextField, ExpansionPanel, ExpansionPanelSummary, Button, \r\nExpansionPanelDetails, FormControl, List, ListItem } from '@material-ui/core';\r\n\r\nimport { bytesToString } from '../../util/conversion.js';\r\n\r\nexport default class TicketView extends Component {\r\n  state = {customer: null}\r\n\r\n  componentDidMount = async () => {\r\n    // get list of tickets\r\n    this.load_tickets();\r\n  }\r\n\r\n  load_tickets = async () => {\r\n    this.setState({tickets: \r\n      await this.props.contract.methods.get_tickets(this.props.eventId, this.props.accounts[0]).call()});\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          {!!(this.props.event)?bytesToString(this.props.event.title):\"loading..\"}\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <FormControl>\r\n            \r\n            {!!(this.state.tickets) ? this.list_tickets() : \"loading..\"}\r\n            <TextField\r\n              label=\"Deadline\"\r\n              margin=\"normal\"\r\n              type=\"datetime-local\"\r\n              disabled={true}\r\n              error={Date.now() >= this.props.event.deadline*1000}\r\n              value={new Date(this.props.event.deadline*1000).toISOString().substr(0,16)}/>\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              disabled={this.can_return_tickets()}\r\n              onClick={() => { this.return_tickets() }}\r\n              >{!this.can_return_tickets() ? \"Return All Tickets\" : \"Ticket return is disabled\"}</Button>\r\n          </FormControl>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n\r\n  can_return_tickets() {\r\n    return !!(this.state.tickets) ? \r\n      (!this.props.event.buyback_active \r\n      || !this.props.event.sale_active \r\n      || (this.state.tickets.length < 1)\r\n      || (Date.now() > this.props.event.deadline*1000)) :\r\n      true;\r\n  }\r\n\r\n  return_tickets = async () => {\r\n    let failed = true;\r\n    await this.props.contract.methods.return_tickets(this.props.eventId).estimateGas({from: this.props.accounts[0]})\r\n    .then(function(gasAmount){\r\n      failed = false;\r\n    })\r\n    .catch(function(error){\r\n      console.log(error);\r\n    });\r\n\r\n    if (!failed) {\r\n      await this.props.contract.methods.return_tickets(this.props.eventId).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      this.load_tickets();\r\n      this.props.reload_event(this.props.eventId);\r\n    }\r\n\r\n  }\r\n\r\n  list_tickets() {\r\n    if (this.state.tickets.length > 0) {\r\n      return(\r\n        <List dense={true}>\r\n          {this.state.tickets.map((e, i) => \r\n            {if(e > 0){\r\n              return <ListItem key={i}>Tickets of type {i+1}: {e}</ListItem>\r\n            }}\r\n          )}\r\n        </List>\r\n      );\r\n    } else {\r\n      return(\r\n        <div>No tickets found.</div>\r\n      );\r\n    }\r\n    \r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport TicketView from './MyTickets/TicketView.js';\r\n\r\nimport { getErrorMessage } from '../util/EthErrorMsg.js';\r\n\r\nexport default class MyTickets extends Component {\r\n\r\n  state = {participation: null}\r\n\r\n  componentDidMount = async () => {\r\n    // get events of which user owns tickets to\r\n    try {\r\n      let participation = await this.props.contract.methods.get_participation().call({from: this.props.accounts[0]})\r\n      this.setState({participation: participation});\r\n    } catch (error) {\r\n      console.log(getErrorMessage(error));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!!(this.state.participation) ? this.state.participation.map((e, i) =>\r\n          {if (this.props.events.has(e)) {\r\n            return(<TicketView\r\n              key={i}\r\n              accounts={this.props.accounts} \r\n              contract={this.props.contract}\r\n              eventId={e}\r\n              reload_event={this.props.reload_event}\r\n              add_pending_tx={this.props.add_pending_tx}\r\n              confirm={this.props.confirm}\r\n              event={this.props.events.get(e)} />)\r\n          } else return (\"No tickets found.\")} \r\n\r\n        ):\"No tickets found...\"}\r\n          \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TextField, ExpansionPanel, ExpansionPanelSummary, Button, Select, FormHelperText, \r\nExpansionPanelDetails, Chip, Avatar, FormControl, MenuItem, List, ListItem, \r\nDialog, DialogTitle, DialogContent, DialogActions} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { bytesToString } from '../../util/conversion.js';\r\nimport { getErrorMessage } from '../../util/EthErrorMsg.js';\r\n\r\nexport default class OwnedEvent extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer_list: [], \r\n      view_funds: false, \r\n      funds: 0, \r\n      confirmation_open: false,\r\n      confirmation_title: null, \r\n      confirmation_message: null,\r\n      event_deleted: false}\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.event) {\r\n      return <div>Loading event data..</div>;\r\n    }\r\n\r\n    return (\r\n      <div><ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          {!!(this.props.event)?bytesToString(this.props.event.title):\"loading..\"}\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <FormControl>\r\n            <Chip\r\n              avatar={<Avatar>S</Avatar>}\r\n              label=\"Sale Status\"\r\n              color={this.get_color(this.props.event.sale_active)}\r\n              clickable\r\n              onClick={() => this.handleActivateSale(this.props.event.sale_active)}\r\n              variant=\"outlined\"/>\r\n            <Chip\r\n              avatar={<Avatar>B</Avatar>}\r\n              label=\"Buyback Status\"\r\n              color={this.get_color(this.props.event.buyback_active)}\r\n              variant=\"outlined\"/>\r\n            <TextField\r\n              label=\"Deadline\"\r\n              margin=\"normal\"\r\n              type=\"datetime-local\"\r\n              disabled={true}\r\n              error={Date.now() >= this.props.event.deadline*1000}\r\n              value={new Date(this.props.event.deadline*1000).toISOString().substr(0,16)}\r\n            />\r\n\r\n            <br/>\r\n\r\n            <List dense={true}>\r\n              {this.props.event.available_tickets.map((e,i) => \r\n                <ListItem key={i}>\r\n                  Ticket type {i+1} - Available tickets: \r\n                  {this.props.event.available_tickets[i]} | Ticket price: \r\n                  {this.props.web3.utils.fromWei(this.props.event.ticket_price[i])} ETH\r\n                </ListItem>\r\n              )}\r\n            </List>\r\n            <br/>\r\n\r\n            <Chip\r\n              label={\"View funds: \" + (this.state.view_funds? (this.props.web3.utils.fromWei(this.state.funds) + \" ETH\") : \"...\")}\r\n              variant=\"outlined\"\r\n              clickable\r\n              onClick={() => this.view_funds()} /> <br/>\r\n\r\n            <div><Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={(Date.now() < this.props.event.deadline*1000) || this.state.funds <= 0}\r\n              onClick={() => { this.withdraw_funds() }}\r\n              >Withdraw funds</Button></div><br/>\r\n\r\n            <AddTickets\r\n              {...this.props}\r\n              tickets={this.props.event.available_tickets}/>\r\n\r\n            <ChangePrices\r\n              {...this.props}\r\n              prices={this.props.event.ticket_price}/>\r\n            <br/>\r\n\r\n            <div><Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => { this.get_customer_list() }}\r\n              >Load customer list</Button></div>\r\n\r\n            <List dense={true}>\r\n              {this.state.customer_list.map((e, i) => \r\n                <ListItem key={i}>\r\n                  {e}\r\n                </ListItem>\r\n              )}\r\n            </List>\r\n\r\n            <div><Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disabled={(Date.now() < (this.props.event.deadline+604800)*1000) || this.state.funds > 0}\r\n              onClick={() => this.setState({\r\n                confirmation_title: \"Delete Event\", \r\n                confirmation_open: true,\r\n                confirmation_message: \"Deletion of event is irreversible - Confirm?\"})}\r\n              >Delete Event</Button></div>\r\n\r\n          </FormControl>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n      <Dialog\r\n        open={this.state.confirmation_open}\r\n        onClose={this.handle_close_confirmation}\r\n      >\r\n        <DialogTitle>{this.state.confirmation_title}</DialogTitle>\r\n        <DialogContent>\r\n          {this.state.confirmation_message}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"secondary\"\r\n            disabled={(Date.now() < (this.props.event.deadline/*+604800*/)*1000) || this.state.funds > 0 || this.state.event_deleted}\r\n            onClick={() => this.delete_event()}\r\n          >Delete Event</Button>\r\n          <Button onClick={this.handle_close_confirmation}>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog></div>\r\n    );\r\n  }\r\n\r\n  handle_close_confirmation = async () => {\r\n    await this.setState({confirmation_open: false});\r\n    if(this.state.event_deleted){\r\n      await this.props.delete_event(this.props.eventId);\r\n    }\r\n  }\r\n\r\n  delete_event = async () => {\r\n    try {\r\n      await this.props.contract.methods.delete_event(this.props.eventId).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      await this.setState({\r\n        event_deleted: true,\r\n        confirmation_title: \"Event deleted\",\r\n        confirmation_message: \"Event has been permanently deleted.\"});\r\n    } catch (error) {\r\n      await this.setState({\r\n        confirmation_title: \"Event deletion failed\",\r\n        confirmation_message: \"Event was not deleted - transaction failed. \\n\" + getErrorMessage(error)});\r\n    }\r\n  }\r\n\r\n  get_color(activator) {\r\n    if (activator) return \"primary\" \r\n    else return \"secondary\";\r\n  }\r\n\r\n  handleActivateSale = async (activator) => {\r\n    try {\r\n      if (activator) {\r\n        await this.props.contract.methods.stop_sale(this.props.eventId).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      } else {\r\n        await this.props.contract.methods.continue_sale(this.props.eventId).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      }\r\n      this.props.reload_event(this.props.eventId); //call to App.js to reload affected event\r\n    \r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n\r\n  view_funds = async () => {\r\n    if (!this.state.view_funds) {\r\n      try{\r\n        this.setState({funds: await this.props.contract.methods.view_funds(\r\n          this.props.eventId\r\n          ).call({from: this.props.accounts[0]})});\r\n        this.setState({view_funds: true})\r\n      } catch (error) {\r\n        console.log(\"Dev error: \" + error.message);\r\n      }\r\n    } else {\r\n      this.setState({view_funds: false})\r\n    }\r\n  }\r\n\r\n  withdraw_funds = async () => {\r\n    try{\r\n      // attempt to withdraw funds\r\n      await this.props.contract.methods.withdraw_funds(this.props.eventId)\r\n        .send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n\r\n      //update current funds display\r\n      this.setState({funds: await this.props.contract.methods.view_funds(\r\n        this.props.eventId\r\n        ).call({from: this.props.accounts[0]})});\r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n\r\n  get_customer_list = async () => {\r\n    try {\r\n      this.setState({customer_list: await this.props.contract.methods.get_customers(\r\n        this.props.eventId\r\n        ).call({from: this.props.accounts[0]})});\r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n}\r\n\r\nexport class AddTickets extends Component {\r\n  addTickets = new Array(this.props.tickets.length).fill(\"0\");\r\n\r\n  render() {\r\n    return(\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          Add tickets\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <FormControl>\r\n            {this.props.tickets.map((e, i) => \r\n              <TextField \r\n                key={i}\r\n                id={\"tickets_to_add\" + i}\r\n                label=\"Tickets to add\"\r\n                variant=\"outlined\" \r\n                margin=\"normal\"\r\n                required={false}\r\n                type=\"number\"\r\n                defaultValue=\"0\"\r\n                onChange={e => this.addTickets[i] = e.target.value}\r\n                inputProps={{ min: \"0\", step: \"1\" }}\r\n                helperText={\"Ticket type \" + (i+1)} />\r\n            )}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => { this.submit() }}\r\n              >Add</Button>\r\n          </FormControl>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n\r\n  submit = async () => {\r\n    try {\r\n      await this.props.contract.methods.add_tickets(\r\n        this.props.eventId,\r\n        this.addTickets\r\n        ).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      this.props.reload_event(this.props.eventId); //call to App.js to reload affected event\r\n\r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n}\r\n\r\nexport class ChangePrices extends Component {\r\n  state = {ticketType: 0, newPrice: this.props.prices[0], button_state: false}\r\n\r\n  render() {\r\n    return(\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          Change prices\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <FormControl>\r\n            <FormHelperText>Ticket type to change</FormHelperText>\r\n            <Select\r\n              labelId=\"Ticket type to change\"\r\n              value={this.state.ticketType}\r\n              onChange={e => this.setState({ticketType: e.target.value})}\r\n            >\r\n              {this.props.prices.map((e, i) => \r\n                <MenuItem key={i} value={i}>{i+1}</MenuItem>\r\n              )}\r\n            </Select>\r\n            \r\n            <TextField \r\n                id={\"new_price\"}\r\n                label=\"New price (ETH)\"\r\n                variant=\"outlined\" \r\n                margin=\"normal\"\r\n                required={true}\r\n                type=\"number\"\r\n                defaultValue={this.props.prices[this.state.ticketType]}\r\n                onChange={e => {\r\n                  !!e.target.value ? this.setState({newPrice: this.props.web3.utils.toWei(e.target.value)}) : \r\n                    this.setState({newPrice: null});\r\n                  this.check_input(e.target.value);\r\n                }}\r\n                inputProps={{ min: \"0.000001\", step: \"0.000001\" }}/>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => { this.submit() }}\r\n              disabled={this.state.button_state}\r\n              >Change price</Button>\r\n          </FormControl>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n\r\n  check_input(input) {\r\n    let s = (!input || input < 0.000001);\r\n    this.setState({button_state: s });\r\n  }\r\n\r\n  submit = async () => {\r\n    try {\r\n      await this.props.contract.methods.change_ticket_price(\r\n        this.props.eventId,\r\n        this.state.ticketType,\r\n        this.state.newPrice\r\n        ).send({from: this.props.accounts[0]})\r\n        .on('transactionHash', (tx) => {\r\n          this.props.add_pending_tx(tx);\r\n        })\r\n        .on('confirmation', (num, receipt) => {\r\n          if(num == 0){\r\n            this.props.confirm(receipt.transactionHash);\r\n          }\r\n        });\r\n      this.props.reload_event(this.props.eventId); //call to App.js to reload affected event\r\n\r\n    } catch (error) {\r\n      console.log(\"Dev error: \" + error.message);\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport OwnedEvent from './MyEvents/OwnedEvent.js';\r\n\r\nexport default class MyEvents extends Component {\r\n  owned_events = [];\r\n  constructor() {\r\n    super();\r\n    this.state = {owned_events: []}\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    // extract list of owned events from all events\r\n    this.props.event_list.map(async (eventId) => {\r\n      let event = this.props.events.get(eventId);\r\n      if (event.owner === this.props.accounts[0]) {\r\n        this.owned_events.push(eventId);\r\n      }\r\n    });\r\n\r\n    this.setState({owned_events: this.owned_events});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.owned_events.map((e, i) =>\r\n          <OwnedEvent\r\n            key={i}\r\n            accounts={this.props.accounts} \r\n            contract={this.props.contract}\r\n            eventId={e} \r\n            event={this.props.events.get(e)}\r\n            reload_event={this.props.reload_event}\r\n            delete_event={this.props.delete_event}\r\n            add_pending_tx={this.props.add_pending_tx}\r\n            confirm={this.props.confirm}\r\n            web3={this.props.web3}/>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport EventContract from \"./contracts/EventContract.json\";\r\nimport getWeb3 from \"./getWeb3\";\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport styled from 'styled-components';\r\nimport { green, orange } from '@material-ui/core/colors';\r\nimport { Button, Typography, AppBar, Tabs, Tab, Backdrop, CircularProgress, FormControl } from '@material-ui/core';\r\n\r\nimport \"./App.css\";\r\nimport CreateEvent from \"./components/CreateEvent\";\r\nimport BrowseEvents from \"./components/BrowseEvents\";\r\nimport MyTickets from \"./components/MyTickets\";\r\nimport MyEvents from \"./components/MyEvents\";\r\n\r\nconst PendingButton = styled(Button)`\r\n  && {\r\n    text-transform: none;\r\n    background-color: ${orange[200]};\r\n  }\r\n`;\r\n\r\nconst ConfirmedButton = styled(Button)`\r\n  text-transform: none;\r\n  background-color: ${green[200]};\r\n`;\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`app-tabpanel-${index}`}\r\n      aria-labelledby={`app-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction tabProps(index) {\r\n  return {\r\n    id: `app-tab-${index}`,\r\n    'aria-controls': `app-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction SimpleBackdrop() {\r\n  return (\r\n    <div>\r\n      <Backdrop  open={true}>\r\n        <FormControl>\r\n          <CircularProgress color=\"inherit\" />\r\n          Loading contract data...\r\n        </FormControl>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass App extends Component {\r\n  state = { web3: null, accounts: null, contract: null, activeTab: 3, pending: [], confirmed: [] };\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = EventContract.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        EventContract.abi,\r\n        deployedNetwork.address\r\n      );\r\n\r\n      instance.options.handleRevert = true;\r\n\r\n      // Set web3, accounts, and contract to the state\r\n      this.setState({ web3, accounts, contract: instance});\r\n\r\n      // load list of event IDs\r\n      await this.load_event_list();\r\n\r\n      // cache all events\r\n      await this.load_events();\r\n\r\n      // Listen for the EventCreated event to be emitted from the contract\r\n      instance.events.EventCreated(async (err, res) => {\r\n        if(!err){\r\n          await this.reload_event(res.returnValues.event_id);\r\n          await this.load_event_list();\r\n        }\r\n      });\r\n\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  load_event_list = async () => {\r\n    let event_list = await this.state.contract.methods.get_events().call();\r\n    this.setState({event_list: event_list});\r\n  }\r\n\r\n  load_events = async () => {\r\n    let events = new Map();\r\n    await Promise.all(this.state.event_list.map(async (event) => {\r\n      events.set(event, await this.state.contract.methods.get_event_info(event).call());\r\n    }));\r\n    this.setState({ events: events });\r\n  }\r\n\r\n  reload_event = async (event_id) => {\r\n    let updated_event = await this.state.contract.methods.get_event_info(event_id).call();\r\n    this.setState((prevState) => {\r\n      let updatedEvents = new Map(prevState.events);\r\n      return { events: updatedEvents.set(event_id, updated_event)};\r\n    });\r\n  }\r\n\r\n  delete_event = async (event_id) => {\r\n    await this.load_event_list();\r\n    this.setState((prevState) => {\r\n      let updatedEvents = new Map(prevState.events);\r\n      updatedEvents.delete(event_id);\r\n      return { events: updatedEvents};\r\n    });\r\n  }\r\n\r\n  changeTab = (event, value) => {\r\n    this.setState({ activeTab: value });\r\n  }\r\n\r\n  confirm = async (tx) => {\r\n    let pending = this.state.pending;\r\n    pending.splice(pending.indexOf(tx), 1);\r\n    this.setState({ pending: pending });\r\n    this.setState({ confirmed: [...this.state.confirmed, tx] });\r\n  }\r\n\r\n  add_pending_tx = async (id) => {\r\n    this.setState({ pending: [...this.state.pending, (id)] });\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.state.web3 || !this.state.events) {\r\n      return <SimpleBackdrop/>;\r\n    }\r\n\r\n    return (\r\n \r\n      <div className=\"App\">\r\n        <AppBar position=\"static\">\r\n          {this.state.pending.map((tx) => {\r\n            let short = tx.substring(0,15) + '...';\r\n            return (\r\n              <PendingButton \r\n                variant=\"contained\"\r\n              >Transaction with id {short} is pending</PendingButton>\r\n            );\r\n          })}\r\n          {this.state.confirmed.map((tx) => {\r\n            let short = tx.substring(0,15) + '...';\r\n            return (\r\n              <ConfirmedButton \r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  let conf = this.state.confirmed;\r\n                  conf.splice(conf.indexOf(tx), 1);\r\n                  this.setState({ confirmed: conf });\r\n                }}\r\n              >Transaction with id {short} has been confirmed! Click to dismiss.</ConfirmedButton>\r\n            );\r\n          })}\r\n          <Tabs\r\n            value={this.state.activeTab}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered={true}\r\n            onChange={this.changeTab}\r\n            aria-label=\"simple tabs example\"\r\n          >\r\n            <Tab label=\"Browse events\" {...tabProps(0)} />\r\n            <Tab label=\"My tickets\" {...tabProps(1)} />\r\n            <Tab label=\"My events\" {...tabProps(2)} />\r\n            <Tab label=\"Create event\" {...tabProps(3)} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={this.state.activeTab} index={0}>\r\n          <BrowseEvents \r\n            contract={this.state.contract} \r\n            accounts={this.state.accounts}\r\n            event_list={this.state.event_list}\r\n            events={this.state.events}\r\n            reload_event={this.reload_event}\r\n            confirm={this.confirm}\r\n            add_pending_tx={this.add_pending_tx}\r\n            web3={this.state.web3}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={this.state.activeTab} index={1}>\r\n            <MyTickets \r\n              accounts={this.state.accounts} \r\n              contract={this.state.contract}\r\n              reload_event={this.reload_event}\r\n              confirm={this.confirm}\r\n              add_pending_tx={this.add_pending_tx}\r\n              events={this.state.events}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={this.state.activeTab} index={2}>\r\n            <MyEvents\r\n              accounts={this.state.accounts} \r\n              contract={this.state.contract} \r\n              event_list={this.state.event_list}\r\n              events={this.state.events}\r\n              reload_event={this.reload_event}\r\n              delete_event={this.delete_event}\r\n              confirm={this.confirm}\r\n              add_pending_tx={this.add_pending_tx}\r\n              web3={this.state.web3}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={this.state.activeTab} index={3}>\r\n            <CreateEvent \r\n              event_list={this.state.event_list}\r\n              web3={this.state.web3} \r\n              accounts={this.state.accounts} \r\n              contract={this.state.contract}\r\n              confirm={this.confirm}\r\n              add_pending_tx={this.add_pending_tx}/>\r\n        </TabPanel>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}